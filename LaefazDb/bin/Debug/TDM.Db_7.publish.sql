/*
Deployment script for TDM.Db

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "TDM.Db"
:setvar DefaultFilePrefix "TDM.Db"
:setvar DefaultDataPath "c:\Program Files\Microsoft SQL Server\MSSQL10_50.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "c:\Program Files\Microsoft SQL Server\MSSQL10_50.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
USE [$(DatabaseName)];


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [dbo].[AmbienteExecucao]...';


GO
CREATE TABLE [dbo].[AmbienteExecucao] (
    [Id]        INT          IDENTITY (1, 1) NOT NULL,
    [Descricao] VARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AmbienteVirtual]...';


GO
CREATE TABLE [dbo].[AmbienteVirtual] (
    [Id]        INT          IDENTITY (1, 1) NOT NULL,
    [Descricao] VARCHAR (50) NOT NULL,
    [IP]        VARCHAR (50) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AUT]...';


GO
CREATE TABLE [dbo].[AUT] (
    [Id]        INT          IDENTITY (1, 1) NOT NULL,
    [Descricao] VARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC),
    CONSTRAINT [AK_AUT_Descricao] UNIQUE NONCLUSTERED ([Descricao] ASC)
);


GO
PRINT N'Creating [dbo].[CondicaoScript]...';


GO
CREATE TABLE [dbo].[CondicaoScript] (
    [Id]        INT          IDENTITY (1, 1) NOT NULL,
    [Descricao] VARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[CondicaoScript].[IX_CondicaoScript_Descricao]...';


GO
CREATE NONCLUSTERED INDEX [IX_CondicaoScript_Descricao]
    ON [dbo].[CondicaoScript]([Descricao] ASC);


GO
PRINT N'Creating [dbo].[DataPool]...';


GO
CREATE TABLE [dbo].[DataPool] (
    [Id]                      INT            IDENTITY (1, 1) NOT NULL,
    [IdTDM]                   INT            NOT NULL,
    [IdAut]                   INT            NOT NULL,
    [IdDemanda]               INT            NULL,
    [IdScript_CondicaoScript] INT            NOT NULL,
    [Descricao]               VARCHAR (50)   NOT NULL,
    [QtdSolicitada]           INT            NULL,
    [Observacao]              VARCHAR (5000) NULL,
    [DataSolicitacao]         DATETIME       NOT NULL,
    [DataInicioExecucao]      DATETIME       NULL,
    [DataTermino]             DATETIME       NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Demanda]...';


GO
CREATE TABLE [dbo].[Demanda] (
    [Id]          INT          IDENTITY (1, 1) NOT NULL,
    [Descricao]   VARCHAR (50) NOT NULL,
    [Complemento] VARCHAR (50) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC),
    CONSTRAINT [AK_Demanda_Descricao] UNIQUE NONCLUSTERED ([Descricao] ASC)
);


GO
PRINT N'Creating [dbo].[Execucao]...';


GO
CREATE TABLE [dbo].[Execucao] (
    [Id]                               INT           IDENTITY (1, 1) NOT NULL,
    [IdScript_CondicaoScript_Ambiente] INT           NULL,
    [IdTestData]                       INT           NULL,
    [IdStatusExecucao]                 INT           NOT NULL,
    [IdTipoFaseTeste]                  INT           NOT NULL,
    [Usuario]                          VARCHAR (50)  NULL,
    [SituacaoAmbiente]                 INT           NULL,
    [ToscaInput]                       VARCHAR (MAX) NULL,
    [ToscaOutput]                      VARCHAR (MAX) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[MapaCalor]...';


GO
CREATE TABLE [dbo].[MapaCalor] (
    [Id]              INT      IDENTITY (1, 1) NOT NULL,
    [IdTelaMapaCalor] INT      NOT NULL,
    [IdUsuario]       INT      NOT NULL,
    [Data]            DATETIME NOT NULL,
    [PosX]            INT      NOT NULL,
    [PosY]            INT      NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Parametro]...';


GO
CREATE TABLE [dbo].[Parametro] (
    [Id]                 INT          IDENTITY (1, 1) NOT NULL,
    [Descricao]          VARCHAR (50) NOT NULL,
    [Tipo]               VARCHAR (50) NOT NULL,
    [ColunaTecnicaTosca] VARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC),
    CONSTRAINT [AK_Parametro_Descricao] UNIQUE NONCLUSTERED ([Descricao] ASC)
);


GO
PRINT N'Creating [dbo].[ParametroScript]...';


GO
CREATE TABLE [dbo].[ParametroScript] (
    [Id]                      INT IDENTITY (1, 1) NOT NULL,
    [IdParametro]             INT NOT NULL,
    [IdScript_CondicaoScript] INT NOT NULL,
    [IdTipoParametro]         INT NOT NULL,
    [Obrigatorio]             BIT NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[ParametroValor]...';


GO
CREATE TABLE [dbo].[ParametroValor] (
    [Id]                INT            IDENTITY (1, 1) NOT NULL,
    [IdTestData]        INT            NOT NULL,
    [IdParametroScript] INT            NOT NULL,
    [Valor]             VARCHAR (5000) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Script]...';


GO
CREATE TABLE [dbo].[Script] (
    [Id]          INT          IDENTITY (1, 1) NOT NULL,
    [IdScriptPai] INT          NULL,
    [IdAUT]       INT          NULL,
    [Descricao]   VARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Script].[IX_Script_Descricao]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_Script_Descricao]
    ON [dbo].[Script]([Descricao] ASC);


GO
PRINT N'Creating [dbo].[Script_CondicaoScript]...';


GO
CREATE TABLE [dbo].[Script_CondicaoScript] (
    [Id]                 INT           IDENTITY (1, 1) NOT NULL,
    [IdScript]           INT           NOT NULL,
    [IdCondicaoScript]   INT           NULL,
    [QueryTosca]         VARCHAR (MAX) NULL,
    [ListaExecucaoTosca] VARCHAR (MAX) NULL,
    [CaminhoArquivoTCS]  VARCHAR (MAX) NULL,
    [DiretorioRelatorio] VARCHAR (MAX) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Script_CondicaoScript].[IX_Script_CondicaoScript]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_Script_CondicaoScript]
    ON [dbo].[Script_CondicaoScript]([IdScript] ASC, [IdCondicaoScript] ASC);


GO
PRINT N'Creating [dbo].[Script_CondicaoScript_Ambiente]...';


GO
CREATE TABLE [dbo].[Script_CondicaoScript_Ambiente] (
    [Id]                      INT IDENTITY (1, 1) NOT NULL,
    [IdScript_CondicaoScript] INT NOT NULL,
    [IdAmbienteVirtual]       INT NULL,
    [IdAmbienteExecucao]      INT NULL,
    CONSTRAINT [PK_Script_CondicaoScript_Ambiente] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Status]...';


GO
CREATE TABLE [dbo].[Status] (
    [Id]        INT          IDENTITY (1, 1) NOT NULL,
    [Descricao] VARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC),
    CONSTRAINT [AK_Status_Column] UNIQUE NONCLUSTERED ([Descricao] ASC)
);


GO
PRINT N'Creating [dbo].[StatusExecucao]...';


GO
CREATE TABLE [dbo].[StatusExecucao] (
    [Id]        INT           NOT NULL,
    [Descricao] VARCHAR (MAX) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[TDM]...';


GO
CREATE TABLE [dbo].[TDM] (
    [Id]         INT          IDENTITY (1, 1) NOT NULL,
    [Descricao]  VARCHAR (50) NOT NULL,
    [TdmPublico] BIT          NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC),
    CONSTRAINT [AK_TDM_Descricao] UNIQUE NONCLUSTERED ([Descricao] ASC)
);


GO
PRINT N'Creating [dbo].[TDM_Usuario]...';


GO
CREATE TABLE [dbo].[TDM_Usuario] (
    [IdUsuario] INT          NOT NULL,
    [IdTDM]     INT          NOT NULL,
    [Descricao] VARCHAR (50) NULL,
    CONSTRAINT [PK_TDM_Usuario] PRIMARY KEY CLUSTERED ([IdTDM] ASC, [IdUsuario] ASC)
);


GO
PRINT N'Creating [dbo].[TelaMapaCalor]...';


GO
CREATE TABLE [dbo].[TelaMapaCalor] (
    [Id]        INT            IDENTITY (1, 1) NOT NULL,
    [Descricao] VARCHAR (10)   NOT NULL,
    [Imagem]    IMAGE          NULL,
    [Caminho]   VARCHAR (1000) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[TestData]...';


GO
CREATE TABLE [dbo].[TestData] (
    [Id]                      INT           IDENTITY (1, 1) NOT NULL,
    [IdExecucao]              INT           NULL,
    [IdDataPool]              INT           NOT NULL,
    [IdStatus]                INT           NOT NULL,
    [IdUsuario]               INT           NULL,
    [IdScript_CondicaoScript] INT           NOT NULL,
    [Descricao]               VARCHAR (50)  NOT NULL,
    [GerarMigracao]           BIT           NOT NULL,
    [CasoTesteRelativo]       VARCHAR (50)  NULL,
    [Observacao]              VARCHAR (500) NULL,
    [InicioExecucao]          DATETIME      NULL,
    [TerminoExecucao]         DATETIME      NULL,
    [GeradoPor]               VARCHAR (50)  NULL,
    [DataGeracao]             DATETIME      NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[TipoFaseTeste]...';


GO
CREATE TABLE [dbo].[TipoFaseTeste] (
    [Id]        INT          IDENTITY (1, 1) NOT NULL,
    [Descricao] VARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[TipoParametro]...';


GO
CREATE TABLE [dbo].[TipoParametro] (
    [Id]        INT          IDENTITY (1, 1) NOT NULL,
    [Descricao] VARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Usuario]...';


GO
CREATE TABLE [dbo].[Usuario] (
    [Id]    INT           IDENTITY (1, 1) NOT NULL,
    [Login] NVARCHAR (50) NOT NULL,
    [Senha] NVARCHAR (32) NOT NULL,
    CONSTRAINT [PK_Usuario] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating unnamed constraint on [dbo].[TDM]...';


GO
ALTER TABLE [dbo].[TDM]
    ADD DEFAULT 0 FOR [TdmPublico];


GO
PRINT N'Creating unnamed constraint on [dbo].[TestData]...';


GO
ALTER TABLE [dbo].[TestData]
    ADD DEFAULT 0 FOR [GerarMigracao];


GO
PRINT N'Creating [dbo].[FK_DataPool_TDM]...';


GO
ALTER TABLE [dbo].[DataPool]
    ADD CONSTRAINT [FK_DataPool_TDM] FOREIGN KEY ([IdTDM]) REFERENCES [dbo].[TDM] ([Id]);


GO
PRINT N'Creating [dbo].[FK_DataPool_Aut]...';


GO
ALTER TABLE [dbo].[DataPool]
    ADD CONSTRAINT [FK_DataPool_Aut] FOREIGN KEY ([IdAut]) REFERENCES [dbo].[AUT] ([Id]);


GO
PRINT N'Creating [dbo].[FK_DataPool_Demanda]...';


GO
ALTER TABLE [dbo].[DataPool]
    ADD CONSTRAINT [FK_DataPool_Demanda] FOREIGN KEY ([IdDemanda]) REFERENCES [dbo].[Demanda] ([Id]);


GO
PRINT N'Creating [dbo].[FK_DataPool_Script_CondicaoScript]...';


GO
ALTER TABLE [dbo].[DataPool]
    ADD CONSTRAINT [FK_DataPool_Script_CondicaoScript] FOREIGN KEY ([IdScript_CondicaoScript]) REFERENCES [dbo].[Script_CondicaoScript] ([Id]);


GO
PRINT N'Creating [dbo].[FK_TipoFaseTeste_Execucao]...';


GO
ALTER TABLE [dbo].[Execucao]
    ADD CONSTRAINT [FK_TipoFaseTeste_Execucao] FOREIGN KEY ([IdTipoFaseTeste]) REFERENCES [dbo].[TipoFaseTeste] ([Id]);


GO
PRINT N'Creating [dbo].[FK_TipoFaseTeste_StatusExecucao]...';


GO
ALTER TABLE [dbo].[Execucao]
    ADD CONSTRAINT [FK_TipoFaseTeste_StatusExecucao] FOREIGN KEY ([IdStatusExecucao]) REFERENCES [dbo].[StatusExecucao] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Script_CondicaoScript_Ambiente_Execucao]...';


GO
ALTER TABLE [dbo].[Execucao]
    ADD CONSTRAINT [FK_Script_CondicaoScript_Ambiente_Execucao] FOREIGN KEY ([IdScript_CondicaoScript_Ambiente]) REFERENCES [dbo].[Script_CondicaoScript_Ambiente] ([Id]);


GO
PRINT N'Creating [dbo].[FK_MapaCalor_Monitoramento_MapaCalor]...';


GO
ALTER TABLE [dbo].[MapaCalor]
    ADD CONSTRAINT [FK_MapaCalor_Monitoramento_MapaCalor] FOREIGN KEY ([IdTelaMapaCalor]) REFERENCES [dbo].[TelaMapaCalor] ([Id]);


GO
PRINT N'Creating [dbo].[FK_MapaCalor_Monitoramento_Usuario]...';


GO
ALTER TABLE [dbo].[MapaCalor]
    ADD CONSTRAINT [FK_MapaCalor_Monitoramento_Usuario] FOREIGN KEY ([IdUsuario]) REFERENCES [dbo].[Usuario] ([Id]);


GO
PRINT N'Creating [dbo].[FK_ParametroScript_Script_CondicaoScript]...';


GO
ALTER TABLE [dbo].[ParametroScript]
    ADD CONSTRAINT [FK_ParametroScript_Script_CondicaoScript] FOREIGN KEY ([IdScript_CondicaoScript]) REFERENCES [dbo].[Script_CondicaoScript] ([Id]);


GO
PRINT N'Creating [dbo].[FK_ParametroScript_Parametro]...';


GO
ALTER TABLE [dbo].[ParametroScript]
    ADD CONSTRAINT [FK_ParametroScript_Parametro] FOREIGN KEY ([IdParametro]) REFERENCES [dbo].[Parametro] ([Id]);


GO
PRINT N'Creating [dbo].[FK_ParametroScript_TipoParametro]...';


GO
ALTER TABLE [dbo].[ParametroScript]
    ADD CONSTRAINT [FK_ParametroScript_TipoParametro] FOREIGN KEY ([IdTipoParametro]) REFERENCES [dbo].[TipoParametro] ([Id]);


GO
PRINT N'Creating [dbo].[FK_ParametroValor_TestData]...';


GO
ALTER TABLE [dbo].[ParametroValor]
    ADD CONSTRAINT [FK_ParametroValor_TestData] FOREIGN KEY ([IdTestData]) REFERENCES [dbo].[TestData] ([Id]);


GO
PRINT N'Creating [dbo].[FK_ParametroValor_ParametroScript]...';


GO
ALTER TABLE [dbo].[ParametroValor]
    ADD CONSTRAINT [FK_ParametroValor_ParametroScript] FOREIGN KEY ([IdParametroScript]) REFERENCES [dbo].[ParametroScript] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Script_AUT]...';


GO
ALTER TABLE [dbo].[Script]
    ADD CONSTRAINT [FK_Script_AUT] FOREIGN KEY ([IdAUT]) REFERENCES [dbo].[AUT] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Script_ScriptPai]...';


GO
ALTER TABLE [dbo].[Script]
    ADD CONSTRAINT [FK_Script_ScriptPai] FOREIGN KEY ([IdScriptPai]) REFERENCES [dbo].[Script] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Script_CondicaoScript_Script]...';


GO
ALTER TABLE [dbo].[Script_CondicaoScript]
    ADD CONSTRAINT [FK_Script_CondicaoScript_Script] FOREIGN KEY ([IdScript]) REFERENCES [dbo].[Script] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Script_CondicaoScript_CondicaoScript]...';


GO
ALTER TABLE [dbo].[Script_CondicaoScript]
    ADD CONSTRAINT [FK_Script_CondicaoScript_CondicaoScript] FOREIGN KEY ([IdCondicaoScript]) REFERENCES [dbo].[CondicaoScript] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Script_CondicaoScript_Ambiente_AmbienteVirtual]...';


GO
ALTER TABLE [dbo].[Script_CondicaoScript_Ambiente]
    ADD CONSTRAINT [FK_Script_CondicaoScript_Ambiente_AmbienteVirtual] FOREIGN KEY ([IdAmbienteVirtual]) REFERENCES [dbo].[AmbienteVirtual] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Script_CondicaoScript_Ambiente_AmbienteExeucao]...';


GO
ALTER TABLE [dbo].[Script_CondicaoScript_Ambiente]
    ADD CONSTRAINT [FK_Script_CondicaoScript_Ambiente_AmbienteExeucao] FOREIGN KEY ([IdAmbienteExecucao]) REFERENCES [dbo].[AmbienteExecucao] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Script_CondicaoScript_Ambiente_CondicaoScript]...';


GO
ALTER TABLE [dbo].[Script_CondicaoScript_Ambiente]
    ADD CONSTRAINT [FK_Script_CondicaoScript_Ambiente_CondicaoScript] FOREIGN KEY ([IdScript_CondicaoScript]) REFERENCES [dbo].[Script_CondicaoScript] ([Id]);


GO
PRINT N'Creating [dbo].[FK_TDM_Usuario_Usuario]...';


GO
ALTER TABLE [dbo].[TDM_Usuario]
    ADD CONSTRAINT [FK_TDM_Usuario_Usuario] FOREIGN KEY ([IdUsuario]) REFERENCES [dbo].[Usuario] ([Id]);


GO
PRINT N'Creating [dbo].[FK_TDM_Usuario_TDM]...';


GO
ALTER TABLE [dbo].[TDM_Usuario]
    ADD CONSTRAINT [FK_TDM_Usuario_TDM] FOREIGN KEY ([IdTDM]) REFERENCES [dbo].[TDM] ([Id]);


GO
PRINT N'Creating [dbo].[FK_TestData_Execucao]...';


GO
ALTER TABLE [dbo].[TestData]
    ADD CONSTRAINT [FK_TestData_Execucao] FOREIGN KEY ([IdExecucao]) REFERENCES [dbo].[Execucao] ([Id]);


GO
PRINT N'Creating [dbo].[FK_TestData_DataPool]...';


GO
ALTER TABLE [dbo].[TestData]
    ADD CONSTRAINT [FK_TestData_DataPool] FOREIGN KEY ([IdDataPool]) REFERENCES [dbo].[DataPool] ([Id]);


GO
PRINT N'Creating [dbo].[FK_TestData_Status]...';


GO
ALTER TABLE [dbo].[TestData]
    ADD CONSTRAINT [FK_TestData_Status] FOREIGN KEY ([IdStatus]) REFERENCES [dbo].[Status] ([Id]);


GO
PRINT N'Creating [dbo].[FK_TestData_Usuario]...';


GO
ALTER TABLE [dbo].[TestData]
    ADD CONSTRAINT [FK_TestData_Usuario] FOREIGN KEY ([IdUsuario]) REFERENCES [dbo].[Usuario] ([Id]);


GO
PRINT N'Creating [dbo].[FK_TestData_Script_CondicaoScript]...';


GO
ALTER TABLE [dbo].[TestData]
    ADD CONSTRAINT [FK_TestData_Script_CondicaoScript] FOREIGN KEY ([IdScript_CondicaoScript]) REFERENCES [dbo].[Script_CondicaoScript] ([Id]);


GO
PRINT N'Creating [dbo].[PR_LISTAR_DATAPOOL]...';


GO
CREATE PROCEDURE PR_LISTAR_DATAPOOL
	@DISPLAYLENGTH INT,
	@DISPLAYSTART INT,
	@SORTCOL INT,
	@SORTDIR NVARCHAR(10),
	@SEARCH NVARCHAR(255) = NULL,
	@LISTARTODOS INT = 1,
	@IDUSUARIO INT,
	@IDTDM NVARCHAR(255) = NULL
AS
BEGIN
	DECLARE @FIRSTREC INT, @LASTREC INT
	SET @FIRSTREC = @DISPLAYSTART;
	SET @LASTREC = @DISPLAYSTART + @DISPLAYLENGTH;

	With CTE_DataPool as
	(
		SELECT 
			ROW_NUMBER() over 
			(
				order by
				
					case when (@SortCol = 0 and @SortDir='asc') then TDM.Descricao end asc,
					case when (@SortCol = 0 and @SortDir='desc') then TDM.Descricao end desc,
					 
					case when (@SortCol = 1 and @SortDir='asc') then Demanda.Descricao end asc,
					case when (@SortCol = 1 and @SortDir='desc') then Demanda.Descricao end desc,
					
					case when (@SortCol = 2 and @SortDir='asc') then AUT.Descricao end asc,
					case when (@SortCol = 2 and @SortDir='desc') then AUT.Descricao end desc,
					
					--case when (@SortCol = 2 and @SortDir='asc') then DataPool.Descricao end asc,
					--case when (@SortCol = 2 and @SortDir='desc') then DataPool.Descricao end desc,
					case when (@SortCol = 3 and @SortDir='asc') then ISNULL(Script.Descricao,'') + ' ' + ISNULL(CondicaoScript.Descricao,'') end asc,
					case when (@SortCol = 3 and @SortDir='desc') then ISNULL(Script.Descricao,'') + ' ' + ISNULL(CondicaoScript.Descricao,'') end desc,
					
					case when (@SortCol = 4 and @SortDir='asc') then DataPool.QtdSolicitada end asc,
					case when (@SortCol = 4 and @SortDir='desc') then DataPool.QtdSolicitada end desc,
					
					case when (@SortCol = 5 and @SortDir='asc') then (SELECT CAST(COUNT(TestData.IdStatus) AS INT) FROM TestData WHERE TestData.IdDataPool = DataPool.Id AND TestData.IdStatus=3) end asc,
					case when (@SortCol = 5 and @SortDir='desc') then (SELECT CAST(COUNT(TestData.IdStatus) AS INT) FROM TestData WHERE TestData.IdDataPool = DataPool.Id AND TestData.IdStatus=3) end desc,
					
					case when (@SortCol = 6 and @SortDir='asc') then (SELECT CAST(COUNT(TestData.IdStatus) AS INT) FROM TestData WHERE TestData.IdDataPool = DataPool.Id AND TestData.IdStatus=5) end asc,
					case when (@SortCol = 6 and @SortDir='desc') then (SELECT CAST(COUNT(TestData.IdStatus) AS INT) FROM TestData WHERE TestData.IdDataPool = DataPool.Id AND TestData.IdStatus=5) end desc,
					
					case when (@SortCol = 7 and @SortDir='asc') then (SELECT CAST(COUNT(TestData.IdStatus) AS INT) FROM TestData WHERE TestData.IdDataPool = DataPool.Id AND TestData.IdStatus=6) end asc,
					case when (@SortCol = 7 and @SortDir='desc') then (SELECT CAST(COUNT(TestData.IdStatus) AS INT) FROM TestData WHERE TestData.IdDataPool = DataPool.Id AND TestData.IdStatus=6) end desc
					
					--case when (@SortCol = 7 and @SortDir='asc') then Farol end asc,
					--case when (@SortCol = 7 and @SortDir='desc') then Farol end desc,
					
					--case when (@SortCol = 8 and @SortDir='asc') then DataPool.Descricao end asc,
					--case when (@SortCol = 8 and @SortDir='desc') then DataPool.Descricao end desc
			) as RowNum,

			COUNT(*) over() as TotalCount,
			DataPool.Id,
			DataPool.Descricao DescricaoDataPool,
			DataPool.DataTermino DataTermino,
			Demanda.Descricao DescricaoDemanda,
			AUT.Descricao DescricaoSistema,
			'Tipo' TipoMassa,
			DataPool.QtdSolicitada,
			(SELECT CAST(COUNT(TestData.IdStatus) AS INT)FROM TestData WHERE TestData.IdDataPool = DataPool.Id AND TestData.IdStatus=3) QtdDisponivel,
			(SELECT CAST(COUNT(TestData.IdStatus) AS INT)FROM TestData WHERE TestData.IdDataPool = DataPool.Id AND TestData.IdStatus=5) QtdReservada,
			(SELECT CAST(COUNT(TestData.IdStatus) AS INT)FROM TestData WHERE TestData.IdDataPool = DataPool.Id AND TestData.IdStatus=6) QtdUtilizada,
			0 Farol,
			DataPool.DataSolicitacao,
			CondicaoScript.Id IdCondicaoScript,
			Script.Id IdScript,
			TDM.Descricao DescricaoTDM,
			ISNULL(Script.Descricao,'') + ' ' + ISNULL(CondicaoScript.Descricao,'') as DescricaoCondicaoScript	
		FROM 
			DataPool
			LEFT JOIN Demanda ON Demanda.Id = DataPool.IdDemanda
			LEFT JOIN AUT ON AUT.Id = DataPool.IdAut
			LEFT JOIN Script_CondicaoScript ON Script_CondicaoScript.Id = DataPool.IdScript_CondicaoScript
			LEFT JOIN Script ON Script.Id = Script_CondicaoScript.IdScript
			LEFT JOIN CondicaoScript ON CondicaoScript.Id = Script_CondicaoScript.IdCondicaoScript
			LEFT JOIN TDM ON TDM.Id = DataPool.IdTDM
			LEFT JOIN TDM_Usuario ON TDM_Usuario.IdTDM = TDM.Id
		WHERE 
		(
			(DataPool.IdTDM = @IDTDM OR @IDTDM IS NULL) AND
			(
				@SEARCH IS NULL 
				OR DataPool.Descricao like '%' + @Search + '%'
				OR Demanda.Descricao like '%' + @Search + '%'
				OR AUT.Descricao like '%' + @Search + '%'
				OR DataPool.QtdSolicitada like '%' + @Search + '%'
			)AND
			(TDM_Usuario.IdUsuario = @IDUSUARIO)
		)
	)
	
	Select * from CTE_DataPool where @ListarTodos = 1 OR (@ListarTodos  = 0 AND RowNum > @FirstRec and RowNum <= @LastRec)
END
GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '5c2e66dd-7378-4397-b3c1-f4ec14539848')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('5c2e66dd-7378-4397-b3c1-f4ec14539848')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'bb2a72ed-deb2-4b15-a95f-3cb3b799ad58')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('bb2a72ed-deb2-4b15-a95f-3cb3b799ad58')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '2d4e43a0-3108-4215-882b-c8996d6579ec')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('2d4e43a0-3108-4215-882b-c8996d6579ec')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '7b4703f6-cac2-47c2-9d74-60a35f25a683')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('7b4703f6-cac2-47c2-9d74-60a35f25a683')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '155cf62e-094e-4fb9-a21b-d791899a29b8')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('155cf62e-094e-4fb9-a21b-d791899a29b8')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '47e5eac6-a7f5-45eb-b992-685ba78f5d22')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('47e5eac6-a7f5-45eb-b992-685ba78f5d22')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '752663a2-16a3-4330-bf5e-9c3a868dddc1')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('752663a2-16a3-4330-bf5e-9c3a868dddc1')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '74200b01-8b9a-490c-a6c6-2635d55ad569')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('74200b01-8b9a-490c-a6c6-2635d55ad569')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '29d1f710-bb1c-4268-a594-df922f6a686c')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('29d1f710-bb1c-4268-a594-df922f6a686c')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '60aff11e-7bfc-4233-bc35-5ee9109a1331')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('60aff11e-7bfc-4233-bc35-5ee9109a1331')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '57b901f3-6894-41e6-80f0-bea6004432b2')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('57b901f3-6894-41e6-80f0-bea6004432b2')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '35746d1e-e025-4c16-bb33-b43f8e6e6877')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('35746d1e-e025-4c16-bb33-b43f8e6e6877')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'e42b4a3d-2451-4f05-b7d6-83be5a46891a')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('e42b4a3d-2451-4f05-b7d6-83be5a46891a')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '851206ad-4ce2-4376-b1aa-bcfc2438d106')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('851206ad-4ce2-4376-b1aa-bcfc2438d106')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'a36e848d-d1d9-4414-b835-960decea0349')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('a36e848d-d1d9-4414-b835-960decea0349')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'ffc6e7ff-2b79-4dc6-8bc1-dc55ac892c24')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('ffc6e7ff-2b79-4dc6-8bc1-dc55ac892c24')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '927262a1-eeba-43a2-9b7d-4fc68c4ada70')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('927262a1-eeba-43a2-9b7d-4fc68c4ada70')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '68cb5ec7-e60b-46fc-a066-f8e4b3df093d')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('68cb5ec7-e60b-46fc-a066-f8e4b3df093d')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '65de61f6-3999-47e9-9802-d802284a0e1f')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('65de61f6-3999-47e9-9802-d802284a0e1f')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '3b20cba6-e984-4ee7-9b51-83dca154330c')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('3b20cba6-e984-4ee7-9b51-83dca154330c')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'a6fc0258-8e37-4db1-b7a1-db34eb5af548')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('a6fc0258-8e37-4db1-b7a1-db34eb5af548')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '2e7f74b6-59de-4d4b-945b-4754c9bc689f')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('2e7f74b6-59de-4d4b-945b-4754c9bc689f')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '2379e126-d888-46a6-b0ea-97940df83b92')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('2379e126-d888-46a6-b0ea-97940df83b92')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '2abc40cc-b0f1-4548-b93b-c2cff3f769d0')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('2abc40cc-b0f1-4548-b93b-c2cff3f769d0')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '5cd2c933-2c3c-49a9-a591-8241523850b0')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('5cd2c933-2c3c-49a9-a591-8241523850b0')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'dd8137fa-219b-415a-a709-773d39ae9c9e')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('dd8137fa-219b-415a-a709-773d39ae9c9e')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '3c9927fa-d33b-4306-b0cc-c19e73ecd360')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('3c9927fa-d33b-4306-b0cc-c19e73ecd360')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'd4a1035e-908c-430d-9358-2277a45f5226')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('d4a1035e-908c-430d-9358-2277a45f5226')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '20fa0dc2-c195-4469-ae09-6455f7b679a3')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('20fa0dc2-c195-4469-ae09-6455f7b679a3')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'e3126f2e-363b-409f-975b-a4f6fe9d9c86')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('e3126f2e-363b-409f-975b-a4f6fe9d9c86')

GO

GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/


-- Carga Inicial


/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

-- Cadastro de AUT
IF NOT EXISTS (SELECT * FROM AUT)
BEGIN
INSERT INTO AUT(Descricao) VALUES ('SIEBEL 6.3');
INSERT INTO AUT(Descricao) VALUES ('STC');
INSERT INTO AUT(Descricao) VALUES ('SAC');
INSERT INTO AUT(Descricao) VALUES ('SIEBEL 8');
INSERT INTO AUT(Descricao) VALUES ('PORTAL');
END
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

-- Cadastro de Usuário Administrador
IF NOT EXISTS (SELECT * FROM Usuario)
BEGIN
INSERT INTO Usuario(Login, Senha)VALUES('walter','senha');
INSERT INTO Usuario(Login, Senha)VALUES('bruce','senha');
INSERT INTO Usuario(Login, Senha)VALUES('rapha','senha');
INSERT INTO Usuario(Login, Senha)VALUES('thiago','senha');
INSERT INTO Usuario(Login, Senha)VALUES('guga','senha');
INSERT INTO Usuario(Login, Senha)VALUES('daniel','senha');
INSERT INTO Usuario(Login, Senha)VALUES('leandro','senha');
INSERT INTO Usuario(Login, Senha)VALUES('gugaNobre','senha');
END

	/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

-- Cadastro de Tipo Fase Teste
IF NOT EXISTS (SELECT * FROM TipoFaseTeste)
BEGIN
	INSERT INTO TipoFaseTeste (Descricao) VALUES ('TI');
	INSERT INTO TipoFaseTeste (Descricao) VALUES ('TRG');
END
	/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

-- Cadastro de Tipo Parametro
IF NOT EXISTS (SELECT * FROM TipoParametro)
BEGIN
	INSERT INTO TipoParametro (Descricao) VALUES ('Entrada');
	INSERT INTO TipoParametro (Descricao) VALUES ('Saída');
END
	/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

-- Cadastro de Status
IF NOT EXISTS (SELECT * FROM Status)
BEGIN
INSERT INTO STATUS(Descricao)VALUES('CADASTRADA');
INSERT INTO STATUS(Descricao)VALUES('DISPONÍVEL');
INSERT INTO STATUS(Descricao)VALUES('RESERVADA');
INSERT INTO STATUS(Descricao)VALUES('UTILIZADA');
INSERT INTO STATUS(Descricao)VALUES('EM GERAÇÃO');
INSERT INTO STATUS(Descricao)VALUES('ERRO');

END

	/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

-- Cadastro de Script
IF NOT EXISTS (SELECT * FROM Script)
BEGIN
INSERT INTO Script (IdAUT, Descricao)
(SELECT Id, 'CRIAÇÃO DE CONTATO E CONTA PF' FROM AUT WHERE Descricao = 'SIEBEL 6.3');

INSERT INTO Script (IdAUT, Descricao)
(SELECT Id, 'CRIAÇÃO DE CONTATO' FROM AUT WHERE Descricao = 'SIEBEL 6.3');

INSERT INTO Script (IdAUT, Descricao)
(SELECT Id, 'REALIZAR CRIAÇÃO DE CONTATO' FROM AUT WHERE Descricao = 'SIEBEL 8');

INSERT INTO Script (IdAUT, Descricao)
(SELECT Id, 'ABRIR OSS DE ATIVAÇÃO DE FIXO E VELOX' FROM AUT WHERE Descricao = 'STC');

INSERT INTO Script (IdAUT, Descricao)
(SELECT Id, 'AJA - CADASTRA - ALTERAR CLIENTE' FROM AUT WHERE Descricao = 'SAC');

INSERT INTO Script (IdAUT, Descricao)
(SELECT Id, 'VALIDAR HOME FIXO' FROM AUT WHERE Descricao = 'PORTAL');

END
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

-- Cadastro de Parametro
IF NOT EXISTS (SELECT * FROM Parametro)
BEGIN
INSERT INTO PARAMETRO(Descricao, Tipo, ColunaTecnicaTosca)VALUES('CPF', 'NUMBER', 'CPF');
INSERT INTO PARAMETRO(Descricao, Tipo, ColunaTecnicaTosca)VALUES('DDD', 'NUMBER', 'DDD');
INSERT INTO PARAMETRO(Descricao, Tipo, ColunaTecnicaTosca)VALUES('CONTA FATURA', 'STRING', 'CONTA_FATURA');
INSERT INTO PARAMETRO(Descricao, Tipo, ColunaTecnicaTosca)VALUES('ENDERECO', 'STRING', 'ENDERECO');
INSERT INTO PARAMETRO(Descricao, Tipo, ColunaTecnicaTosca)VALUES('SENHA GERENTE', 'STRING', 'SENHA_GERENTE');
INSERT INTO PARAMETRO(Descricao, Tipo, ColunaTecnicaTosca)VALUES('LOCALIDADE', 'STRING', 'LOCALIDADE');
INSERT INTO PARAMETRO(Descricao, Tipo, ColunaTecnicaTosca)VALUES('CAMPANHA', 'STRING', 'CAMPANHA');
INSERT INTO PARAMETRO(Descricao, Tipo, ColunaTecnicaTosca)VALUES('URL', 'STRING', 'URL');
INSERT INTO PARAMETRO(Descricao, Tipo, ColunaTecnicaTosca)VALUES('USUARIO SISTEMA', 'STRING', 'USUARIO_SISTEMA');
INSERT INTO PARAMETRO(Descricao, Tipo, ColunaTecnicaTosca)VALUES('SENHA SISTEMA', 'STRING', 'SENHA_SISTEMA');
INSERT INTO PARAMETRO(Descricao, Tipo, ColunaTecnicaTosca)VALUES('APLICACAO', 'STRING', 'APLICACAO');
INSERT INTO PARAMETRO(Descricao, Tipo, ColunaTecnicaTosca)VALUES('TRILHA', 'STRING', 'TRILHA');
INSERT INTO PARAMETRO(Descricao, Tipo, ColunaTecnicaTosca)VALUES('TIPO PESSOA', 'STRING', 'TIPO_PESSOA');
INSERT INTO PARAMETRO(Descricao, Tipo, ColunaTecnicaTosca)VALUES('EVIDENCIA: RESULTADO ESPERADO', 'STRING', 'RESULTADO_ESPERADO');
INSERT INTO PARAMETRO(Descricao, Tipo, ColunaTecnicaTosca)VALUES('EVIDENCIA: AMBIENTE', 'STRING', 'AMBIENTE');
INSERT INTO PARAMETRO(Descricao, Tipo, ColunaTecnicaTosca)VALUES('EVIDENCIA: AUTOR', 'STRING', 'AUTOR');
INSERT INTO PARAMETRO(Descricao, Tipo, ColunaTecnicaTosca)VALUES('EVIDENCIA: DADOS DE ENTRADA', 'STRING', 'DADOS_DE_ENTRADA');
INSERT INTO PARAMETRO(Descricao, Tipo, ColunaTecnicaTosca)VALUES('EVIDENCIA: DADOS DE SAIDA', 'STRING', 'DADOS_DE_SAIDA');
INSERT INTO PARAMETRO(Descricao, Tipo, ColunaTecnicaTosca)VALUES('EVIDENCIA: FASE', 'STRING', 'FASE');
INSERT INTO PARAMETRO(Descricao, Tipo, ColunaTecnicaTosca)VALUES('EVIDENCIA: NOME DO CASO DE TESTE', 'STRING', 'NOME_DO_CASO_DE_TESTE');
INSERT INTO PARAMETRO(Descricao, Tipo, ColunaTecnicaTosca)VALUES('EVIDENCIA: TITULO', 'STRING', 'TITULO');
INSERT INTO PARAMETRO(Descricao, Tipo, ColunaTecnicaTosca)VALUES('EVIDENCIA: PRJ', 'STRING', 'PRJ');
INSERT INTO PARAMETRO(Descricao, Tipo, ColunaTecnicaTosca)VALUES('EVIDENCIA: NUMERO DO CASO DE TESTE', 'STRING', 'NUMERO_DO_CASO_DE_TESTE');
END
	/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

-- Cadastro de Condicao Script
IF NOT EXISTS (SELECT * FROM CondicaoScript)
BEGIN
	INSERT INTO CondicaoScript (Descricao) VALUES ('SEM ENVIO AO CDI');
	INSERT INTO CondicaoScript (Descricao) VALUES ('ATÉ O PONTO DE ENVIO DA ORDEM');
	INSERT INTO CondicaoScript (Descricao) VALUES ('SEM PRODUTO DE TV');
	INSERT INTO CondicaoScript (Descricao) VALUES ('SEM DEPENDENTE');
	INSERT INTO CondicaoScript (Descricao) VALUES ('COM DEPEMDEMTE');
	INSERT INTO CondicaoScript (Descricao) VALUES ('SIMPLES');
	INSERT INTO CondicaoScript (Descricao) VALUES ('COMBO');
	INSERT INTO CondicaoScript (Descricao) VALUES ('COM PRODUTO DE TV');
	INSERT INTO CondicaoScript (Descricao) VALUES ('COM ENVIO AO CDI');
	INSERT INTO CondicaoScript (Descricao) VALUES ('GERENTE TELECON');
	INSERT INTO CondicaoScript (Descricao) VALUES ('COM CAMPANHA');
	INSERT INTO CondicaoScript (Descricao) VALUES ('OFC');
END
	/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

-- Cadastro de Demanda
IF NOT EXISTS (SELECT * FROM Demanda)
BEGIN
INSERT INTO DEMANDA(Descricao, Complemento)VALUES('PRJ0000001_ENT000001', 'DESCRIÇÃO COMPLEMENTAR DO PRJ0000001_ENT000001');
INSERT INTO DEMANDA(Descricao, Complemento)VALUES('PRJ0000002_ENT000002', 'DESCRIÇÃO COMPLEMENTAR DO PRJ0000002_ENT000002');
END
	/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

-- Cadastro de Script
IF NOT EXISTS (SELECT * FROM Script_CondicaoScript)
BEGIN
INSERT INTO Script_CondicaoScript (IdScript, IdCondicaoScript)  
(SELECT scr.Id, con.Id FROM Script scr, CondicaoScript con WHERE scr.Descricao = 'CRIAÇÃO DE CONTATO' AND con.Descricao = 'SEM ENVIO AO CDI');
INSERT INTO Script_CondicaoScript (IdScript, IdCondicaoScript)  
(SELECT scr.Id, con.Id FROM Script scr, CondicaoScript con WHERE scr.Descricao = 'CRIAÇÃO DE CONTATO' AND con.Descricao = 'COM ENVIO AO CDI');
INSERT INTO Script_CondicaoScript (IdScript, IdCondicaoScript)  
(SELECT scr.Id, con.Id FROM Script scr, CondicaoScript con WHERE scr.Descricao = 'CRIAÇÃO DE CONTATO' AND con.Descricao = 'GERENTE TELECON');
INSERT INTO Script_CondicaoScript (IdScript, IdCondicaoScript)  
(SELECT scr.Id, con.Id FROM Script scr, CondicaoScript con WHERE scr.Descricao = 'ABRIR OSS DE ATIVAÇÃO DE FIXO E VELOX' AND con.Descricao = 'COM CAMPANHA');
INSERT INTO Script_CondicaoScript (IdScript, IdCondicaoScript)  
(SELECT scr.Id, NULL FROM Script scr WHERE scr.Descricao = 'CRIAÇÃO DE CONTATO E CONTA PF');
INSERT INTO Script_CondicaoScript (IdScript, IdCondicaoScript)  
(SELECT scr.Id, NULL FROM Script scr WHERE scr.Descricao = 'REALIZAR CRIAÇÃO DE CONTATO');
INSERT INTO Script_CondicaoScript (IdScript, IdCondicaoScript, ListaExecucaoTosca, CaminhoArquivoTCS, DiretorioRelatorio, QueryTosca)  
(SELECT scr.Id, NULL,'/Execution/ExecutionLists/AJA_CADASTRA_ALTERAR_CLIENTE','C:\Tosca_Projects\Tosca_Workspaces\TDM\remote_exec\aja-cadastra-altera-cliente.tcs','C:\Tosca_Projects\Tosca_Workspaces\TDM\remote_exec\Reports\report.txt',

'SELECT DISTINCT top 10000 tdt.Id AS ID_TEST_DATA,
                    scr.Descricao AS SCRIPT,
                    dem.Descricao AS DEMANDA,
                    tdt.CasoTesteRelativo AS CASO_TESTE,
                    us.Login AS USUARIO,
					aut.Descricao AS SISTEMA,

  (SELECT parvAux.valor
   FROM ParametroValor parvAux
   INNER JOIN ParametroScript parsAux ON parvAux.IdParametroScript = parsAux.Id
   INNER JOIN Parametro parAux ON parsAux.IdParametro = parAux.Id
   WHERE parAux.Descricao = ''CPF''
     AND parvAux.IdTestData = tdt.Id) AS CPF,

  (SELECT parvAux.valor
   FROM ParametroValor parvAux
   INNER JOIN ParametroScript parsAux ON parvAux.IdParametroScript = parsAux.Id
   INNER JOIN Parametro parAux ON parsAux.IdParametro = parAux.Id
   WHERE parAux.Descricao = ''USUARIO SISTEMA''
     AND parvAux.IdTestData = tdt.Id) AS USUARIO_SISTEMA,

  (SELECT parvAux.valor
   FROM ParametroValor parvAux
   INNER JOIN ParametroScript parsAux ON parvAux.IdParametroScript = parsAux.Id
   INNER JOIN Parametro parAux ON parsAux.IdParametro = parAux.Id
   WHERE parAux.Descricao = ''SENHA SISTEMA''
     AND parvAux.IdTestData = tdt.Id) AS SENHA_SISTEMA,

  (SELECT parvAux.valor
   FROM ParametroValor parvAux
   INNER JOIN ParametroScript parsAux ON parvAux.IdParametroScript = parsAux.Id
   INNER JOIN Parametro parAux ON parsAux.IdParametro = parAux.Id
   WHERE parAux.Descricao = ''APLICACAO''
     AND parvAux.IdTestData = tdt.Id) AS APLICACAO,

  (SELECT parvAux.valor
   FROM ParametroValor parvAux
   INNER JOIN ParametroScript parsAux ON parvAux.IdParametroScript = parsAux.Id
   INNER JOIN Parametro parAux ON parsAux.IdParametro = parAux.Id
   WHERE parAux.Descricao = ''TRILHA''
     AND parvAux.IdTestData = tdt.Id) AS TRILHA,

  (SELECT parvAux.valor 
    FROM ParametroValor parvAux
   INNER JOIN ParametroScript parsAux ON parvAux.IdParametroScript = parsAux.Id  
   INNER JOIN Parametro parAux ON parsAux.IdParametro = parAux.Id  
   WHERE parAux.Descricao = ''TIPO PESSOA''
     AND parvAux.IdTestData = tdt.Id) AS TIPO_PESSOA, 

  (SELECT parvAux.valor
   FROM ParametroValor parvAux
   INNER JOIN ParametroScript parsAux ON parvAux.IdParametroScript = parsAux.Id
   INNER JOIN Parametro parAux ON parsAux.IdParametro = parAux.Id
   WHERE parAux.Descricao = ''EVIDENCIA: RESULTADO ESPERADO''
     AND parvAux.IdTestData = tdt.Id) AS RESULTADO_ESPERADO,

  (SELECT parvAux.valor
   FROM ParametroValor parvAux
   INNER JOIN ParametroScript parsAux ON parvAux.IdParametroScript = parsAux.Id
   INNER JOIN Parametro parAux ON parsAux.IdParametro = parAux.Id
   WHERE parAux.Descricao = ''EVIDENCIA: AMBIENTE''
     AND parvAux.IdTestData = tdt.Id) AS AMBIENTE,

  (SELECT parvAux.valor
   FROM ParametroValor parvAux
   INNER JOIN ParametroScript parsAux ON parvAux.IdParametroScript = parsAux.Id
   INNER JOIN Parametro parAux ON parsAux.IdParametro = parAux.Id
   WHERE parAux.Descricao = ''EVIDENCIA: AUTOR''
     AND parvAux.IdTestData = tdt.Id) AS AUTOR,

  (SELECT parvAux.valor
   FROM ParametroValor parvAux
   INNER JOIN ParametroScript parsAux ON parvAux.IdParametroScript = parsAux.Id
   INNER JOIN Parametro parAux ON parsAux.IdParametro = parAux.Id
   WHERE parAux.Descricao = ''EVIDENCIA: DADOS DE ENTRADA''
     AND parvAux.IdTestData = tdt.Id) AS DADOS_DE_ENTRADA,

  (SELECT parvAux.valor
   FROM ParametroValor parvAux
   INNER JOIN ParametroScript parsAux ON parvAux.IdParametroScript = parsAux.Id
   INNER JOIN Parametro parAux ON parsAux.IdParametro = parAux.Id
   WHERE parAux.Descricao = ''EVIDENCIA: DADOS DE SAIDA''
     AND parvAux.IdTestData = tdt.Id) AS DADOS_DE_SAIDA,

  (SELECT parvAux.valor
   FROM ParametroValor parvAux
   INNER JOIN ParametroScript parsAux ON parvAux.IdParametroScript = parsAux.Id
   INNER JOIN Parametro parAux ON parsAux.IdParametro = parAux.Id
   WHERE parAux.Descricao = ''EVIDENCIA: FASE''
     AND parvAux.IdTestData = tdt.Id) AS FASE,

  (SELECT parvAux.valor
   FROM ParametroValor parvAux
   INNER JOIN ParametroScript parsAux ON parvAux.IdParametroScript = parsAux.Id
   INNER JOIN Parametro parAux ON parsAux.IdParametro = parAux.Id
   WHERE parAux.Descricao = ''EVIDENCIA: NOME DO CASO DE TESTE''
     AND parvAux.IdTestData = tdt.Id) AS NOME_DO_CASO_DE_TESTE,

  (SELECT parvAux.valor
   FROM ParametroValor parvAux
   INNER JOIN ParametroScript parsAux ON parvAux.IdParametroScript = parsAux.Id
   INNER JOIN Parametro parAux ON parsAux.IdParametro = parAux.Id
   WHERE parAux.Descricao = ''EVIDENCIA: TITULO''
     AND parvAux.IdTestData = tdt.Id) AS TITULO,

  (SELECT parvAux.valor
   FROM ParametroValor parvAux
   INNER JOIN ParametroScript parsAux ON parvAux.IdParametroScript = parsAux.Id
   INNER JOIN Parametro parAux ON parsAux.IdParametro = parAux.Id
   WHERE parAux.Descricao = ''EVIDENCIA: PRJ''
     AND parvAux.IdTestData = tdt.Id) AS PRJ,

  (SELECT parvAux.valor
   FROM ParametroValor parvAux
   INNER JOIN ParametroScript parsAux ON parvAux.IdParametroScript = parsAux.Id
   INNER JOIN Parametro parAux ON parsAux.IdParametro = parAux.Id
   WHERE parAux.Descricao = ''EVIDENCIA: NUMERO DO CASO DE TESTE''
     AND parvAux.IdTestData = tdt.Id) AS NUMERO_DO_CASO_DE_TESTE
FROM TestData tdt
INNER JOIN DataPool dtp ON tdt.IdDataPool = dtp.Id
LEFT JOIN Script_CondicaoScript scrcon ON dtp.IdScript_CondicaoScript = scrcon.Id
LEFT JOIN Script_CondicaoScript_Ambiente scrconamb ON scrconamb.IdScript_CondicaoScript = scrcon.Id
INNER JOIN Script scr ON scrcon.IdScript = scr.Id
LEFT JOIN CondicaoScript con ON scrcon.IdCondicaoScript = con.Id
INNER JOIN ParametroScript parscr ON parscr.IdScript_CondicaoScript = scrcon.Id
INNER JOIN Parametro par ON parscr.IdParametro = par.Id
INNER JOIN AUT aut ON dtp.IdAut = aut.Id
LEFT JOIN AmbienteExecucao ambexec ON scrconamb.IdAmbienteExecucao = ambexec.Id
INNER JOIN AmbienteVirtual ambvir ON scrconamb.IdAmbienteVirtual = ambvir.Id
INNER JOIN Demanda dem ON dtp.IdDemanda = dem.Id
INNER JOIN Usuario us ON tdt.IdUsuario = us.Id
WHERE tdt.Id IN (ptdTosca)
ORDER BY tdt.id'  FROM Script scr WHERE scr.Descricao = 'AJA - CADASTRA - ALTERAR CLIENTE');

INSERT INTO Script_CondicaoScript (IdScript, IdCondicaoScript, ListaExecucaoTosca, CaminhoArquivoTCS, DiretorioRelatorio, QueryTosca)
(SELECT scr.Id, NULL, '/Execution/ExecutionLists/VALIDAR_HOME_FIXO','C:\Tosca_Projects\Tosca_Workspaces\TDM\remote_exec\validar_home_fixo.tcs','C:/Tosca_Projects/Tosca_Workspaces/TDM/remote_exec/Reports/report.txt',
'SELECT DISTINCT top 10000 tdt.Id AS ID_TEST_DATA,
                    scr.Descricao AS SCRIPT,
                    dem.Descricao AS DEMANDA,
                    tdt.CasoTesteRelativo AS CASO_TESTE,
                    us.Login AS USUARIO,
					aut.Descricao AS SISTEMA,

  (SELECT parvAux.valor
   FROM ParametroValor parvAux
   INNER JOIN ParametroScript parsAux ON parvAux.IdParametroScript = parsAux.Id
   INNER JOIN Parametro parAux ON parsAux.IdParametro = parAux.Id
   WHERE parAux.Descricao = ''CPF''
     AND parvAux.IdTestData = tdt.Id) AS CPF,

  (SELECT parvAux.valor
   FROM ParametroValor parvAux
   INNER JOIN ParametroScript parsAux ON parvAux.IdParametroScript = parsAux.Id
   INNER JOIN Parametro parAux ON parsAux.IdParametro = parAux.Id
   WHERE parAux.Descricao = ''URL''
     AND parvAux.IdTestData = tdt.Id) AS URL,

  (SELECT parvAux.valor
   FROM ParametroValor parvAux
   INNER JOIN ParametroScript parsAux ON parvAux.IdParametroScript = parsAux.Id
   INNER JOIN Parametro parAux ON parsAux.IdParametro = parAux.Id
   WHERE parAux.Descricao = ''EVIDENCIA: RESULTADO ESPERADO''
     AND parvAux.IdTestData = tdt.Id) AS RESULTADO_ESPERADO,

  (SELECT parvAux.valor
   FROM ParametroValor parvAux
   INNER JOIN ParametroScript parsAux ON parvAux.IdParametroScript = parsAux.Id
   INNER JOIN Parametro parAux ON parsAux.IdParametro = parAux.Id
   WHERE parAux.Descricao = ''EVIDENCIA: AMBIENTE''
     AND parvAux.IdTestData = tdt.Id) AS AMBIENTE,

  (SELECT parvAux.valor
   FROM ParametroValor parvAux
   INNER JOIN ParametroScript parsAux ON parvAux.IdParametroScript = parsAux.Id
   INNER JOIN Parametro parAux ON parsAux.IdParametro = parAux.Id
   WHERE parAux.Descricao = ''EVIDENCIA: AUTOR''
     AND parvAux.IdTestData = tdt.Id) AS AUTOR,

  (SELECT parvAux.valor
   FROM ParametroValor parvAux
   INNER JOIN ParametroScript parsAux ON parvAux.IdParametroScript = parsAux.Id
   INNER JOIN Parametro parAux ON parsAux.IdParametro = parAux.Id
   WHERE parAux.Descricao = ''EVIDENCIA: DADOS DE ENTRADA''
     AND parvAux.IdTestData = tdt.Id) AS DADOS_DE_ENTRADA,

  (SELECT parvAux.valor
   FROM ParametroValor parvAux
   INNER JOIN ParametroScript parsAux ON parvAux.IdParametroScript = parsAux.Id
   INNER JOIN Parametro parAux ON parsAux.IdParametro = parAux.Id
   WHERE parAux.Descricao = ''EVIDENCIA: DADOS DE SAIDA''
     AND parvAux.IdTestData = tdt.Id) AS DADOS_DE_SAIDA,

  (SELECT parvAux.valor
   FROM ParametroValor parvAux
   INNER JOIN ParametroScript parsAux ON parvAux.IdParametroScript = parsAux.Id
   INNER JOIN Parametro parAux ON parsAux.IdParametro = parAux.Id
   WHERE parAux.Descricao = ''EVIDENCIA: FASE''
     AND parvAux.IdTestData = tdt.Id) AS FASE,

  (SELECT parvAux.valor
   FROM ParametroValor parvAux
   INNER JOIN ParametroScript parsAux ON parvAux.IdParametroScript = parsAux.Id
   INNER JOIN Parametro parAux ON parsAux.IdParametro = parAux.Id
   WHERE parAux.Descricao = ''EVIDENCIA: NOME DO CASO DE TESTE''
     AND parvAux.IdTestData = tdt.Id) AS NOME_DO_CASO_DE_TESTE,

  (SELECT parvAux.valor
   FROM ParametroValor parvAux
   INNER JOIN ParametroScript parsAux ON parvAux.IdParametroScript = parsAux.Id
   INNER JOIN Parametro parAux ON parsAux.IdParametro = parAux.Id
   WHERE parAux.Descricao = ''EVIDENCIA: TITULO''
     AND parvAux.IdTestData = tdt.Id) AS TITULO,

  (SELECT parvAux.valor
   FROM ParametroValor parvAux
   INNER JOIN ParametroScript parsAux ON parvAux.IdParametroScript = parsAux.Id
   INNER JOIN Parametro parAux ON parsAux.IdParametro = parAux.Id
   WHERE parAux.Descricao = ''EVIDENCIA: PRJ''
     AND parvAux.IdTestData = tdt.Id) AS PRJ,

  (SELECT parvAux.valor
   FROM ParametroValor parvAux
   INNER JOIN ParametroScript parsAux ON parvAux.IdParametroScript = parsAux.Id
   INNER JOIN Parametro parAux ON parsAux.IdParametro = parAux.Id
   WHERE parAux.Descricao = ''EVIDENCIA: NUMERO DO CASO DE TESTE''
     AND parvAux.IdTestData = tdt.Id) AS NUMERO_DO_CASO_DE_TESTE
FROM TestData tdt
INNER JOIN DataPool dtp ON tdt.IdDataPool = dtp.Id
LEFT JOIN Script_CondicaoScript scrcon ON dtp.IdScript_CondicaoScript = scrcon.Id
LEFT JOIN Script_CondicaoScript_Ambiente scrconamb ON scrconamb.IdScript_CondicaoScript = scrcon.Id
INNER JOIN Script scr ON scrcon.IdScript = scr.Id
LEFT JOIN CondicaoScript con ON scrcon.IdCondicaoScript = con.Id
INNER JOIN ParametroScript parscr ON parscr.IdScript_CondicaoScript = scrcon.Id
INNER JOIN Parametro par ON parscr.IdParametro = par.Id
INNER JOIN AUT aut ON dtp.IdAut = aut.Id
LEFT JOIN AmbienteExecucao ambexec ON scrconamb.IdAmbienteExecucao = ambexec.Id
INNER JOIN AmbienteVirtual ambvir ON scrconamb.IdAmbienteVirtual = ambvir.Id
INNER JOIN Demanda dem ON dtp.IdDemanda = dem.Id
INNER JOIN Usuario us ON tdt.IdUsuario = us.Id
WHERE tdt.Id IN (ptdTosca)
ORDER BY tdt.id'  FROM Script scr WHERE scr.Descricao = 'VALIDAR HOME FIXO');
END
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

-- Cadastro de ParametroScript
IF NOT EXISTS (SELECT * FROM ParametroScript)
BEGIN
	-- CRIAÇÃO DE CONTATO E CONTA PF
	-- CPF
	INSERT INTO ParametroScript (IdParametro, IdScript_CondicaoScript, IdTipoParametro, Obrigatorio) 
(SELECT par.Id,
(SELECT scrcon.Id 
FROM Script_CondicaoScript scrcon 
LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
LEFT JOIN CondicaoScript con ON scrcon.IdCondicaoScript = con.Id
WHERE scr.Descricao = 'CRIAÇÃO DE CONTATO E CONTA PF'), tpar.Id, 1  
FROM Parametro par, TipoParametro tpar
WHERE par.Descricao = 'CPF'
AND tpar.Descricao = 'ENTRADA');

INSERT INTO ParametroScript (IdParametro, IdScript_CondicaoScript, IdTipoParametro, Obrigatorio) 
(SELECT par.Id,
(SELECT scrcon.Id 
FROM Script_CondicaoScript scrcon 
LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
LEFT JOIN CondicaoScript con ON scrcon.IdCondicaoScript = con.Id
WHERE scr.Descricao = 'CRIAÇÃO DE CONTATO E CONTA PF'), tpar.Id, 1 
FROM Parametro par, TipoParametro tpar
WHERE par.Descricao = 'DDD'
AND tpar.Descricao = 'ENTRADA');

INSERT INTO ParametroScript (IdParametro, IdScript_CondicaoScript, IdTipoParametro, Obrigatorio) 
(SELECT par.Id,
(SELECT scrcon.Id 
FROM Script_CondicaoScript scrcon 
LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
LEFT JOIN CondicaoScript con ON scrcon.IdCondicaoScript = con.Id
WHERE scr.Descricao = 'CRIAÇÃO DE CONTATO E CONTA PF'), tpar.Id, 1 
FROM Parametro par, TipoParametro tpar
WHERE par.Descricao = 'CONTA FATURA'
AND tpar.Descricao = 'ENTRADA');

INSERT INTO ParametroScript (IdParametro, IdScript_CondicaoScript, IdTipoParametro, Obrigatorio) 
(SELECT par.Id,
(SELECT scrcon.Id 
FROM Script_CondicaoScript scrcon 
LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
LEFT JOIN CondicaoScript con ON scrcon.IdCondicaoScript = con.Id
WHERE scr.Descricao = 'CRIAÇÃO DE CONTATO E CONTA PF'), tpar.Id, 1 
FROM Parametro par, TipoParametro tpar
WHERE par.Descricao = 'ENDERECO'
AND tpar.Descricao = 'ENTRADA');

INSERT INTO ParametroScript (IdParametro, IdScript_CondicaoScript, IdTipoParametro, Obrigatorio) 
(SELECT par.Id,
(SELECT scrcon.Id 
FROM Script_CondicaoScript scrcon 
LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
LEFT JOIN CondicaoScript con ON scrcon.IdCondicaoScript = con.Id
WHERE scr.Descricao = 'REALIZAR CRIAÇÃO DE CONTATO'), tpar.Id, 1 
FROM Parametro par, TipoParametro tpar
WHERE par.Descricao = 'CPF'
AND tpar.Descricao = 'ENTRADA');

INSERT INTO ParametroScript (IdParametro, IdScript_CondicaoScript, IdTipoParametro, Obrigatorio) 
(SELECT par.Id,
(SELECT scrcon.Id 
FROM Script_CondicaoScript scrcon 
LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
LEFT JOIN CondicaoScript con ON scrcon.IdCondicaoScript = con.Id
WHERE scr.Descricao = 'REALIZAR CRIAÇÃO DE CONTATO'), tpar.Id, 1 
FROM Parametro par, TipoParametro tpar
WHERE par.Descricao = 'DDD'
AND tpar.Descricao = 'ENTRADA')

INSERT INTO ParametroScript (IdParametro, IdScript_CondicaoScript, IdTipoParametro, Obrigatorio) 
(SELECT par.Id,
(SELECT scrcon.Id 
FROM Script_CondicaoScript scrcon 
LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
LEFT JOIN CondicaoScript con ON scrcon.IdCondicaoScript = con.Id
WHERE scr.Descricao = 'REALIZAR CRIAÇÃO DE CONTATO'), tpar.Id, 1 
FROM Parametro par, TipoParametro tpar
WHERE par.Descricao = 'CONTA FATURA'
AND tpar.Descricao = 'ENTRADA');

INSERT INTO ParametroScript (IdParametro, IdScript_CondicaoScript, IdTipoParametro, Obrigatorio) 
(SELECT par.Id,
(SELECT scrcon.Id 
FROM Script_CondicaoScript scrcon 
LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
LEFT JOIN CondicaoScript con ON scrcon.IdCondicaoScript = con.Id
WHERE scr.Descricao = 'REALIZAR CRIAÇÃO DE CONTATO'), tpar.Id, 1 
FROM Parametro par, TipoParametro tpar
WHERE par.Descricao = 'ENDERECO'
AND tpar.Descricao = 'ENTRADA');

INSERT INTO ParametroScript (IdParametro, IdScript_CondicaoScript, IdTipoParametro, Obrigatorio) 
(SELECT par.Id,
(SELECT scrcon.Id 
FROM Script_CondicaoScript scrcon 
LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
LEFT JOIN CondicaoScript con ON scrcon.IdCondicaoScript = con.Id
WHERE scr.Descricao = 'CRIAÇÃO DE CONTATO' AND con.Descricao = 'SEM ENVIO AO CDI'), tpar.Id, 1 
FROM Parametro par, TipoParametro tpar
WHERE par.Descricao = 'CPF'
AND tpar.Descricao = 'ENTRADA');

INSERT INTO ParametroScript (IdParametro, IdScript_CondicaoScript, IdTipoParametro, Obrigatorio) 
(SELECT par.Id,
(SELECT scrcon.Id 
FROM Script_CondicaoScript scrcon 
LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
LEFT JOIN CondicaoScript con ON scrcon.IdCondicaoScript = con.Id
WHERE scr.Descricao = 'CRIAÇÃO DE CONTATO' AND con.Descricao = 'COM ENVIO AO CDI'), tpar.Id, 1 
FROM Parametro par, TipoParametro tpar
WHERE par.Descricao = 'CPF'
AND tpar.Descricao = 'ENTRADA');

INSERT INTO ParametroScript (IdParametro, IdScript_CondicaoScript, IdTipoParametro, Obrigatorio) 
(SELECT par.Id,
(SELECT scrcon.Id 
FROM Script_CondicaoScript scrcon 
LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
LEFT JOIN CondicaoScript con ON scrcon.IdCondicaoScript = con.Id
WHERE scr.Descricao = 'CRIAÇÃO DE CONTATO' AND con.Descricao = 'GERENTE TELECON'), tpar.Id, 1 
FROM Parametro par, TipoParametro tpar
WHERE par.Descricao = 'SENHA GERENTE'
AND tpar.Descricao = 'ENTRADA');

INSERT INTO ParametroScript (IdParametro, IdScript_CondicaoScript, IdTipoParametro, Obrigatorio) 
(SELECT par.Id,
(SELECT scrcon.Id 
FROM Script_CondicaoScript scrcon 
LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
LEFT JOIN CondicaoScript con ON scrcon.IdCondicaoScript = con.Id
WHERE scr.Descricao = 'ABRIR OSS DE ATIVAÇÃO DE FIXO E VELOX' AND con.Descricao = 'COM CAMPANHA'), tpar.Id, 1 
FROM Parametro par, TipoParametro tpar
WHERE par.Descricao = 'CAMPANHA'
AND tpar.Descricao = 'ENTRADA');

INSERT INTO ParametroScript (IdParametro, IdScript_CondicaoScript, IdTipoParametro, Obrigatorio) 
(SELECT par.Id,
(SELECT scrcon.Id 
FROM Script_CondicaoScript scrcon 
LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
LEFT JOIN CondicaoScript con ON scrcon.IdCondicaoScript = con.Id
WHERE scr.Descricao = 'AJA - CADASTRA - ALTERAR CLIENTE'), tpar.Id, 1 
FROM Parametro par, TipoParametro tpar
WHERE par.Descricao = 'CPF'
AND tpar.Descricao = 'ENTRADA');

INSERT INTO ParametroScript (IdParametro, IdScript_CondicaoScript, IdTipoParametro, Obrigatorio) 
(SELECT par.Id,
(SELECT scrcon.Id 
FROM Script_CondicaoScript scrcon 
LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
LEFT JOIN CondicaoScript con ON scrcon.IdCondicaoScript = con.Id
WHERE scr.Descricao = 'AJA - CADASTRA - ALTERAR CLIENTE'), tpar.Id, 1 
FROM Parametro par, TipoParametro tpar
WHERE par.Descricao = 'USUARIO SISTEMA'
AND tpar.Descricao = 'ENTRADA');

INSERT INTO ParametroScript (IdParametro, IdScript_CondicaoScript, IdTipoParametro, Obrigatorio) 
(SELECT par.Id,
(SELECT scrcon.Id 
FROM Script_CondicaoScript scrcon 
LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
LEFT JOIN CondicaoScript con ON scrcon.IdCondicaoScript = con.Id
WHERE scr.Descricao = 'AJA - CADASTRA - ALTERAR CLIENTE'), tpar.Id, 1 
FROM Parametro par, TipoParametro tpar
WHERE par.Descricao = 'SENHA SISTEMA'
AND tpar.Descricao = 'ENTRADA');

INSERT INTO ParametroScript (IdParametro, IdScript_CondicaoScript, IdTipoParametro, Obrigatorio) 
(SELECT par.Id,
(SELECT scrcon.Id 
FROM Script_CondicaoScript scrcon 
LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
LEFT JOIN CondicaoScript con ON scrcon.IdCondicaoScript = con.Id
WHERE scr.Descricao = 'AJA - CADASTRA - ALTERAR CLIENTE'), tpar.Id, 1 
FROM Parametro par, TipoParametro tpar
WHERE par.Descricao = 'APLICACAO'
AND tpar.Descricao = 'ENTRADA');

INSERT INTO ParametroScript (IdParametro, IdScript_CondicaoScript, IdTipoParametro, Obrigatorio) 
(SELECT par.Id,
(SELECT scrcon.Id 
FROM Script_CondicaoScript scrcon 
LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
LEFT JOIN CondicaoScript con ON scrcon.IdCondicaoScript = con.Id
WHERE scr.Descricao = 'AJA - CADASTRA - ALTERAR CLIENTE'), tpar.Id, 1 
FROM Parametro par, TipoParametro tpar
WHERE par.Descricao = 'TRILHA'
AND tpar.Descricao = 'ENTRADA');

INSERT INTO ParametroScript (IdParametro, IdScript_CondicaoScript, IdTipoParametro,Obrigatorio) 
(SELECT par.Id,
(SELECT scrcon.Id 
FROM Script_CondicaoScript scrcon 
LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
LEFT JOIN CondicaoScript con ON scrcon.IdCondicaoScript = con.Id
WHERE scr.Descricao = 'AJA - CADASTRA - ALTERAR CLIENTE'), tpar.Id, 1 
FROM Parametro par, TipoParametro tpar
WHERE par.Descricao = 'TIPO PESSOA'
AND tpar.Descricao = 'ENTRADA');

INSERT INTO ParametroScript (IdParametro, IdScript_CondicaoScript, IdTipoParametro,Obrigatorio) 
(SELECT par.Id,
(SELECT scrcon.Id 
FROM Script_CondicaoScript scrcon 
LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
LEFT JOIN CondicaoScript con ON scrcon.IdCondicaoScript = con.Id
WHERE scr.Descricao = 'AJA - CADASTRA - ALTERAR CLIENTE'), tpar.Id, 1 
FROM Parametro par, TipoParametro tpar
WHERE par.Descricao = 'EVIDENCIA: RESULTADO ESPERADO'
AND tpar.Descricao = 'ENTRADA');

INSERT INTO ParametroScript (IdParametro, IdScript_CondicaoScript, IdTipoParametro,Obrigatorio) 
(SELECT par.Id,
(SELECT scrcon.Id 
FROM Script_CondicaoScript scrcon 
LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
LEFT JOIN CondicaoScript con ON scrcon.IdCondicaoScript = con.Id
WHERE scr.Descricao = 'AJA - CADASTRA - ALTERAR CLIENTE'), tpar.Id, 1 
FROM Parametro par, TipoParametro tpar
WHERE par.Descricao = 'EVIDENCIA: AMBIENTE'
AND tpar.Descricao = 'ENTRADA');

INSERT INTO ParametroScript (IdParametro, IdScript_CondicaoScript, IdTipoParametro,Obrigatorio) 
(SELECT par.Id,
(SELECT scrcon.Id 
FROM Script_CondicaoScript scrcon 
LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
LEFT JOIN CondicaoScript con ON scrcon.IdCondicaoScript = con.Id
WHERE scr.Descricao = 'AJA - CADASTRA - ALTERAR CLIENTE'), tpar.Id, 1 
FROM Parametro par, TipoParametro tpar
WHERE par.Descricao = 'EVIDENCIA: AUTOR'
AND tpar.Descricao = 'ENTRADA');

INSERT INTO ParametroScript (IdParametro, IdScript_CondicaoScript, IdTipoParametro,Obrigatorio) 
(SELECT par.Id,
(SELECT scrcon.Id 
FROM Script_CondicaoScript scrcon 
LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
LEFT JOIN CondicaoScript con ON scrcon.IdCondicaoScript = con.Id
WHERE scr.Descricao = 'AJA - CADASTRA - ALTERAR CLIENTE'), tpar.Id, 1 
FROM Parametro par, TipoParametro tpar
WHERE par.Descricao = 'EVIDENCIA: DADOS DE ENTRADA'
AND tpar.Descricao = 'ENTRADA');

INSERT INTO ParametroScript (IdParametro, IdScript_CondicaoScript, IdTipoParametro,Obrigatorio) 
(SELECT par.Id,
(SELECT scrcon.Id 
FROM Script_CondicaoScript scrcon 
LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
LEFT JOIN CondicaoScript con ON scrcon.IdCondicaoScript = con.Id
WHERE scr.Descricao = 'AJA - CADASTRA - ALTERAR CLIENTE'), tpar.Id, 1 
FROM Parametro par, TipoParametro tpar
WHERE par.Descricao = 'EVIDENCIA: DADOS DE SAIDA'
AND tpar.Descricao = 'ENTRADA');

INSERT INTO ParametroScript (IdParametro, IdScript_CondicaoScript, IdTipoParametro,Obrigatorio) 
(SELECT par.Id,
(SELECT scrcon.Id 
FROM Script_CondicaoScript scrcon 
LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
LEFT JOIN CondicaoScript con ON scrcon.IdCondicaoScript = con.Id
WHERE scr.Descricao = 'AJA - CADASTRA - ALTERAR CLIENTE'), tpar.Id, 1 
FROM Parametro par, TipoParametro tpar
WHERE par.Descricao = 'EVIDENCIA: FASE'
AND tpar.Descricao = 'ENTRADA');
	
INSERT INTO ParametroScript (IdParametro, IdScript_CondicaoScript, IdTipoParametro,Obrigatorio) 
(SELECT par.Id,
(SELECT scrcon.Id 
FROM Script_CondicaoScript scrcon 
LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
LEFT JOIN CondicaoScript con ON scrcon.IdCondicaoScript = con.Id
WHERE scr.Descricao = 'AJA - CADASTRA - ALTERAR CLIENTE'), tpar.Id, 1 
FROM Parametro par, TipoParametro tpar
WHERE par.Descricao = 'EVIDENCIA: NOME DO CASO DE TESTE'
AND tpar.Descricao = 'ENTRADA');
	
	
INSERT INTO ParametroScript (IdParametro, IdScript_CondicaoScript, IdTipoParametro,Obrigatorio) 
(SELECT par.Id,
(SELECT scrcon.Id 
FROM Script_CondicaoScript scrcon 
LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
LEFT JOIN CondicaoScript con ON scrcon.IdCondicaoScript = con.Id
WHERE scr.Descricao = 'AJA - CADASTRA - ALTERAR CLIENTE'), tpar.Id, 1 
FROM Parametro par, TipoParametro tpar
WHERE par.Descricao = 'EVIDENCIA: TITULO'
AND tpar.Descricao = 'ENTRADA');

INSERT INTO ParametroScript (IdParametro, IdScript_CondicaoScript, IdTipoParametro,Obrigatorio) 
(SELECT par.Id,
(SELECT scrcon.Id 
FROM Script_CondicaoScript scrcon 
LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
LEFT JOIN CondicaoScript con ON scrcon.IdCondicaoScript = con.Id
WHERE scr.Descricao = 'AJA - CADASTRA - ALTERAR CLIENTE'), tpar.Id, 1 
FROM Parametro par, TipoParametro tpar
WHERE par.Descricao = 'EVIDENCIA: PRJ'
AND tpar.Descricao = 'ENTRADA');	
	
INSERT INTO ParametroScript (IdParametro, IdScript_CondicaoScript, IdTipoParametro,Obrigatorio) 
(SELECT par.Id,
(SELECT scrcon.Id 
FROM Script_CondicaoScript scrcon 
LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
LEFT JOIN CondicaoScript con ON scrcon.IdCondicaoScript = con.Id
WHERE scr.Descricao = 'AJA - CADASTRA - ALTERAR CLIENTE'), tpar.Id, 1 
FROM Parametro par, TipoParametro tpar
WHERE par.Descricao = 'EVIDENCIA: NUMERO DO CASO DE TESTE'
AND tpar.Descricao = 'ENTRADA');	
	

INSERT INTO ParametroScript (IdParametro, IdScript_CondicaoScript, IdTipoParametro,Obrigatorio) 
(SELECT par.Id,
(SELECT scrcon.Id 
FROM Script_CondicaoScript scrcon 
LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
LEFT JOIN CondicaoScript con ON scrcon.IdCondicaoScript = con.Id
WHERE scr.Descricao = 'VALIDAR HOME FIXO'), tpar.Id, 1 
FROM Parametro par, TipoParametro tpar
WHERE par.Descricao = 'CPF'
AND tpar.Descricao = 'ENTRADA');

INSERT INTO ParametroScript (IdParametro, IdScript_CondicaoScript, IdTipoParametro,Obrigatorio) 
(SELECT par.Id,
(SELECT scrcon.Id 
FROM Script_CondicaoScript scrcon 
LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
LEFT JOIN CondicaoScript con ON scrcon.IdCondicaoScript = con.Id
WHERE scr.Descricao = 'VALIDAR HOME FIXO'), tpar.Id, 1 
FROM Parametro par, TipoParametro tpar
WHERE par.Descricao = 'URL'
AND tpar.Descricao = 'ENTRADA');

INSERT INTO ParametroScript (IdParametro, IdScript_CondicaoScript, IdTipoParametro,Obrigatorio) 
(SELECT par.Id,
(SELECT scrcon.Id 
FROM Script_CondicaoScript scrcon 
LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
LEFT JOIN CondicaoScript con ON scrcon.IdCondicaoScript = con.Id
WHERE scr.Descricao = 'VALIDAR HOME FIXO'), tpar.Id, 1 
FROM Parametro par, TipoParametro tpar
WHERE par.Descricao = 'EVIDENCIA: AMBIENTE'
AND tpar.Descricao = 'ENTRADA');

INSERT INTO ParametroScript (IdParametro, IdScript_CondicaoScript, IdTipoParametro,Obrigatorio) 
(SELECT par.Id,
(SELECT scrcon.Id 
FROM Script_CondicaoScript scrcon 
LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
LEFT JOIN CondicaoScript con ON scrcon.IdCondicaoScript = con.Id
WHERE scr.Descricao = 'VALIDAR HOME FIXO'), tpar.Id, 1 
FROM Parametro par, TipoParametro tpar
WHERE par.Descricao = 'EVIDENCIA: RESULTADO ESPERADO'
AND tpar.Descricao = 'ENTRADA');

INSERT INTO ParametroScript (IdParametro, IdScript_CondicaoScript, IdTipoParametro,Obrigatorio) 
(SELECT par.Id,
(SELECT scrcon.Id 
FROM Script_CondicaoScript scrcon 
LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
LEFT JOIN CondicaoScript con ON scrcon.IdCondicaoScript = con.Id
WHERE scr.Descricao = 'VALIDAR HOME FIXO'), tpar.Id, 1 
FROM Parametro par, TipoParametro tpar
WHERE par.Descricao = 'EVIDENCIA: AUTOR'
AND tpar.Descricao = 'ENTRADA');

INSERT INTO ParametroScript (IdParametro, IdScript_CondicaoScript, IdTipoParametro,Obrigatorio) 
(SELECT par.Id,
(SELECT scrcon.Id 
FROM Script_CondicaoScript scrcon 
LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
LEFT JOIN CondicaoScript con ON scrcon.IdCondicaoScript = con.Id
WHERE scr.Descricao = 'VALIDAR HOME FIXO'), tpar.Id, 1 
FROM Parametro par, TipoParametro tpar
WHERE par.Descricao = 'EVIDENCIA: DADOS DE ENTRADA'
AND tpar.Descricao = 'ENTRADA');

INSERT INTO ParametroScript (IdParametro, IdScript_CondicaoScript, IdTipoParametro,Obrigatorio) 
(SELECT par.Id,
(SELECT scrcon.Id 
FROM Script_CondicaoScript scrcon 
LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
LEFT JOIN CondicaoScript con ON scrcon.IdCondicaoScript = con.Id
WHERE scr.Descricao = 'VALIDAR HOME FIXO'), tpar.Id, 1 
FROM Parametro par, TipoParametro tpar
WHERE par.Descricao = 'EVIDENCIA: DADOS DE SAIDA'
AND tpar.Descricao = 'ENTRADA');

INSERT INTO ParametroScript (IdParametro, IdScript_CondicaoScript, IdTipoParametro,Obrigatorio) 
(SELECT par.Id,
(SELECT scrcon.Id 
FROM Script_CondicaoScript scrcon 
LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
LEFT JOIN CondicaoScript con ON scrcon.IdCondicaoScript = con.Id
WHERE scr.Descricao = 'VALIDAR HOME FIXO'), tpar.Id, 1 
FROM Parametro par, TipoParametro tpar
WHERE par.Descricao = 'EVIDENCIA: FASE'
AND tpar.Descricao = 'ENTRADA');

INSERT INTO ParametroScript (IdParametro, IdScript_CondicaoScript, IdTipoParametro,Obrigatorio) 
(SELECT par.Id,
(SELECT scrcon.Id 
FROM Script_CondicaoScript scrcon 
LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
LEFT JOIN CondicaoScript con ON scrcon.IdCondicaoScript = con.Id
WHERE scr.Descricao = 'VALIDAR HOME FIXO'), tpar.Id, 1 
FROM Parametro par, TipoParametro tpar
WHERE par.Descricao = 'EVIDENCIA: NOME DO CASO DE TESTE'
AND tpar.Descricao = 'ENTRADA');

INSERT INTO ParametroScript (IdParametro, IdScript_CondicaoScript, IdTipoParametro,Obrigatorio) 
(SELECT par.Id,
(SELECT scrcon.Id 
FROM Script_CondicaoScript scrcon 
LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
LEFT JOIN CondicaoScript con ON scrcon.IdCondicaoScript = con.Id
WHERE scr.Descricao = 'VALIDAR HOME FIXO'), tpar.Id, 1 
FROM Parametro par, TipoParametro tpar
WHERE par.Descricao = 'EVIDENCIA: TITULO'
AND tpar.Descricao = 'ENTRADA');

INSERT INTO ParametroScript (IdParametro, IdScript_CondicaoScript, IdTipoParametro,Obrigatorio) 
(SELECT par.Id,
(SELECT scrcon.Id 
FROM Script_CondicaoScript scrcon 
LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
LEFT JOIN CondicaoScript con ON scrcon.IdCondicaoScript = con.Id
WHERE scr.Descricao = 'VALIDAR HOME FIXO'), tpar.Id, 1 
FROM Parametro par, TipoParametro tpar
WHERE par.Descricao = 'EVIDENCIA: PRJ'
AND tpar.Descricao = 'ENTRADA');

INSERT INTO ParametroScript (IdParametro, IdScript_CondicaoScript, IdTipoParametro,Obrigatorio) 
(SELECT par.Id,
(SELECT scrcon.Id 
FROM Script_CondicaoScript scrcon 
LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
LEFT JOIN CondicaoScript con ON scrcon.IdCondicaoScript = con.Id
WHERE scr.Descricao = 'VALIDAR HOME FIXO'), tpar.Id, 1 
FROM Parametro par, TipoParametro tpar
WHERE par.Descricao = 'EVIDENCIA: NUMERO DO CASO DE TESTE'
AND tpar.Descricao = 'ENTRADA');

END
	/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

-- Cadastro de Ambiente Execução 'TI8'
IF NOT EXISTS (SELECT * FROM AmbienteExecucao WHERE Descricao = 'TI8')
BEGIN
	INSERT INTO AmbienteExecucao (Descricao) VALUES ('TI8');
END

-- Cadastro de Ambiente Execução 'TI1'
IF NOT EXISTS (SELECT * FROM AmbienteExecucao WHERE Descricao = 'TI1')
BEGIN
	INSERT INTO AmbienteExecucao (Descricao) VALUES ('TI1');
END
	/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

-- Cadastro de Ambiente Virtual 'VDI01'
IF NOT EXISTS (SELECT * FROM AmbienteVirtual WHERE Descricao = 'VDI01')
BEGIN
	INSERT INTO AmbienteVirtual (Descricao, IP) VALUES ('VDI01', '10.43.6.141');
END

-- Cadastro de Ambiente Virtual 'VDI02'
IF NOT EXISTS (SELECT * FROM AmbienteVirtual WHERE Descricao = 'VDI02')
BEGIN
	INSERT INTO AmbienteVirtual (Descricao, IP) VALUES ('VDI02', '10.43.6.219');
END

	/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

-- Cadastro de TDM
IF NOT EXISTS (SELECT * FROM TDM)
BEGIN
INSERT INTO TDM (Descricao, TdmPublico) VALUES ('TDM TESTE', 0);
INSERT INTO TDM (Descricao, TdmPublico) VALUES ('TDM BRUCE', 0);
INSERT INTO TDM (Descricao, TdmPublico) VALUES ('TDM WALTER', 0);
INSERT INTO TDM (Descricao, TdmPublico) VALUES ('TDM DANIEL', 0);
INSERT INTO TDM (Descricao, TdmPublico) VALUES ('TDM PÚBLICO', 1);

END
	/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

-- Cadastro de DataPool
IF NOT EXISTS (SELECT * FROM DataPool)
BEGIN
INSERT INTO DataPool (IdTDM, IdAut, IdDemanda, IdScript_CondicaoScript, Descricao, QtdSolicitada, Observacao, DataSolicitacao, DataInicioExecucao)
(SELECT (SELECT Id FROM TDM WHERE Descricao = 'TDM TESTE'), (SELECT Id FROM AUT WHERE Descricao = 'SAC'), 
(SELECT Id FROM Demanda WHERE Descricao = 'PRJ0000001_ENT000001'), 
(SELECT scrcon.Id FROM Script_CondicaoScript scrcon LEFT JOIN Script scr ON scrcon.IdScript = scr.Id WHERE scr.Descricao = 'AJA - CADASTRA - ALTERAR CLIENTE'),
'DATAPOOL TESTE', 10, 'OBSERVAÇÃO PARA DATAPOOL TESTE', GETDATE(), GETDATE());

INSERT INTO DataPool (IdTDM, IdAut, IdDemanda, IdScript_CondicaoScript, Descricao, QtdSolicitada, Observacao, DataSolicitacao, DataInicioExecucao)
(SELECT (SELECT Id FROM TDM WHERE Descricao = 'TDM TESTE'), (SELECT Id FROM AUT WHERE Descricao = 'PORTAL'), 
(SELECT Id FROM Demanda WHERE Descricao = 'PRJ0000001_ENT000001'), 
(SELECT scrcon.Id FROM Script_CondicaoScript scrcon LEFT JOIN Script scr ON scrcon.IdScript = scr.Id WHERE scr.Descricao = 'VALIDAR HOME FIXO'),
'DATAPOOL TESTE PORTAL', 10, 'OBSERVAÇÃO PARA DATAPOOL TESTE PORTAL', GETDATE(), GETDATE());
END
	/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

-- Cadastro de Script
IF NOT EXISTS (SELECT * FROM Script_CondicaoScript_Ambiente)
BEGIN
INSERT INTO Script_CondicaoScript_Ambiente (IdScript_CondicaoScript, IdAmbienteVirtual,IdAmbienteExecucao)
(SELECT (SELECT scrcon.Id FROM Script_CondicaoScript scrcon LEFT JOIN Script scr ON scrcon.IdScript = scr.Id WHERE scr.Descricao = 'AJA - CADASTRA - ALTERAR CLIENTE'),
(SELECT Id FROM AmbienteVirtual WHERE Descricao = 'VDI01'),1);
INSERT INTO Script_CondicaoScript_Ambiente (IdScript_CondicaoScript, IdAmbienteVirtual,IdAmbienteExecucao)
(SELECT (SELECT scrcon.Id FROM Script_CondicaoScript scrcon LEFT JOIN Script scr ON scrcon.IdScript = scr.Id WHERE scr.Descricao = 'AJA - CADASTRA - ALTERAR CLIENTE'),
(SELECT Id FROM AmbienteVirtual WHERE Descricao = 'VDI02'),1);

INSERT INTO Script_CondicaoScript_Ambiente (IdScript_CondicaoScript, IdAmbienteVirtual,IdAmbienteExecucao)
(SELECT (SELECT scrcon.Id FROM Script_CondicaoScript scrcon LEFT JOIN Script scr ON scrcon.IdScript = scr.Id WHERE scr.Descricao = 'VALIDAR HOME FIXO'),
(SELECT Id FROM AmbienteVirtual WHERE Descricao = 'VDI01'),1);
INSERT INTO Script_CondicaoScript_Ambiente (IdScript_CondicaoScript, IdAmbienteVirtual,IdAmbienteExecucao)
(SELECT (SELECT scrcon.Id FROM Script_CondicaoScript scrcon LEFT JOIN Script scr ON scrcon.IdScript = scr.Id WHERE scr.Descricao = 'VALIDAR HOME FIXO'),
(SELECT Id FROM AmbienteVirtual WHERE Descricao = 'VDI02'),1);

END
IF NOT EXISTS (SELECT * FROM TestData)
BEGIN
INSERT INTO TestData (IdExecucao, IdDataPool, IdStatus, IdUsuario, IdScript_CondicaoScript, Descricao, GerarMigracao, CasoTesteRelativo, Observacao, InicioExecucao)
(SELECT null, (SELECT Id FROM DataPool WHERE Descricao = 'DATAPOOL TESTE'), 
(SELECT Id FROM Status WHERE Descricao='CADASTRADA'), (SELECT Id FROM Usuario WHERE Login='walter'), 
(SELECT scrcon.Id FROM Script_CondicaoScript scrcon LEFT JOIN Script scr ON scrcon.IdScript = scr.Id WHERE scr.Descricao = 'AJA - CADASTRA - ALTERAR CLIENTE'),
'AJA - CADASTRA - ALTERAR CLIENTE', 0, '01.01', 'OBSERVAÇÃO PARA GERAÇÃO DE MASSA TESTE', GETDATE());

INSERT INTO TestData (IdExecucao, IdDataPool, IdStatus, IdUsuario, IdScript_CondicaoScript, Descricao, 
GerarMigracao, CasoTesteRelativo, Observacao, InicioExecucao)
(SELECT null, (SELECT Id FROM DataPool WHERE Descricao = 'DATAPOOL TESTE PORTAL'), 
(SELECT Id FROM Status WHERE Descricao='CADASTRADA'), (SELECT Id FROM Usuario WHERE Login='walter'), 
(SELECT scrcon.Id FROM Script_CondicaoScript scrcon LEFT JOIN Script scr ON scrcon.IdScript = scr.Id WHERE scr.Descricao = 'VALIDAR HOME FIXO'),
'VALIDAR HOME FIXO', 0, '01.01', 'OBSERVAÇÃO PARA GERAÇÃO DE MASSA TESTE PORTAL', GETDATE());
END





















/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

-- Cadastro de Parametro
IF NOT EXISTS (SELECT * FROM ParametroValor)
BEGIN
INSERT INTO ParametroValor (IdTestData, IdParametroScript, Valor)
(SELECT (SELECT Id FROM TestData WHERE Descricao = 'VALIDAR HOME FIXO'), 
(SELECT parscr.Id FROM ParametroScript parscr 
	LEFT JOIN Parametro par ON parscr.IdParametro = par.Id 
	LEFT JOIN Script_CondicaoScript scrcon ON parscr.IdScript_CondicaoScript = scrcon.Id
	LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
	WHERE par.Descricao = 'CPF' AND scr.Descricao='VALIDAR HOME FIXO'), '62494088356');	

INSERT INTO ParametroValor (IdTestData, IdParametroScript, Valor)
(SELECT (SELECT Id FROM TestData WHERE Descricao = 'VALIDAR HOME FIXO'), 
(SELECT parscr.Id FROM ParametroScript parscr 
	LEFT JOIN Parametro par ON parscr.IdParametro = par.Id 
	LEFT JOIN Script_CondicaoScript scrcon ON parscr.IdScript_CondicaoScript = scrcon.Id
	LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
	WHERE par.Descricao = 'URL' AND scr.Descricao='VALIDAR HOME FIXO'), 'http://mgmtposloginhml.telemar/portal/site/MinhaOi/ProcessarLogin?');	
	
INSERT INTO ParametroValor (IdTestData, IdParametroScript, Valor)
(SELECT (SELECT Id FROM TestData WHERE Descricao = 'VALIDAR HOME FIXO'), 
(SELECT parscr.Id FROM ParametroScript parscr 
	LEFT JOIN Parametro par ON parscr.IdParametro = par.Id 
	LEFT JOIN Script_CondicaoScript scrcon ON parscr.IdScript_CondicaoScript = scrcon.Id
	LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
	WHERE par.Descricao = 'EVIDENCIA: RESULTADO ESPERADO' AND scr.Descricao='VALIDAR HOME FIXO'), 'Tela validada com sucesso');	
	
INSERT INTO ParametroValor (IdTestData, IdParametroScript, Valor)
(SELECT (SELECT Id FROM TestData WHERE Descricao = 'VALIDAR HOME FIXO'), 
(SELECT parscr.Id FROM ParametroScript parscr 
	LEFT JOIN Parametro par ON parscr.IdParametro = par.Id 
	LEFT JOIN Script_CondicaoScript scrcon ON parscr.IdScript_CondicaoScript = scrcon.Id
	LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
	WHERE par.Descricao = 'EVIDENCIA: AMBIENTE' AND scr.Descricao='VALIDAR HOME FIXO'), 'TI8');	
	
INSERT INTO ParametroValor (IdTestData, IdParametroScript, Valor)
(SELECT (SELECT Id FROM TestData WHERE Descricao = 'VALIDAR HOME FIXO'), 
(SELECT parscr.Id FROM ParametroScript parscr 
	LEFT JOIN Parametro par ON parscr.IdParametro = par.Id 
	LEFT JOIN Script_CondicaoScript scrcon ON parscr.IdScript_CondicaoScript = scrcon.Id
	LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
	WHERE par.Descricao = 'EVIDENCIA: AUTOR' AND scr.Descricao='VALIDAR HOME FIXO'), 'LEANDRO');	
	
INSERT INTO ParametroValor (IdTestData, IdParametroScript, Valor)
(SELECT (SELECT Id FROM TestData WHERE Descricao = 'VALIDAR HOME FIXO'), 
(SELECT parscr.Id FROM ParametroScript parscr 
	LEFT JOIN Parametro par ON parscr.IdParametro = par.Id 
	LEFT JOIN Script_CondicaoScript scrcon ON parscr.IdScript_CondicaoScript = scrcon.Id
	LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
	WHERE par.Descricao = 'EVIDENCIA: DADOS DE ENTRADA' AND scr.Descricao='VALIDAR HOME FIXO'), 'DADOS DE ENTRADA TESTE DO SCRIPT DO PORTAL');	
	
INSERT INTO ParametroValor (IdTestData, IdParametroScript, Valor)
(SELECT (SELECT Id FROM TestData WHERE Descricao = 'VALIDAR HOME FIXO'), 
(SELECT parscr.Id FROM ParametroScript parscr 
	LEFT JOIN Parametro par ON parscr.IdParametro = par.Id 
	LEFT JOIN Script_CondicaoScript scrcon ON parscr.IdScript_CondicaoScript = scrcon.Id
	LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
	WHERE par.Descricao = 'EVIDENCIA: DADOS DE SAIDA' AND scr.Descricao='VALIDAR HOME FIXO'), 'DADOS DE SAIDA TESTE DO SCRIPT DO PORTAL');	
	
INSERT INTO ParametroValor (IdTestData, IdParametroScript, Valor)
(SELECT (SELECT Id FROM TestData WHERE Descricao = 'VALIDAR HOME FIXO'), 
(SELECT parscr.Id FROM ParametroScript parscr 
	LEFT JOIN Parametro par ON parscr.IdParametro = par.Id 
	LEFT JOIN Script_CondicaoScript scrcon ON parscr.IdScript_CondicaoScript = scrcon.Id
	LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
	WHERE par.Descricao = 'EVIDENCIA: FASE' AND scr.Descricao='VALIDAR HOME FIXO'), 'TI');	
	
INSERT INTO ParametroValor (IdTestData, IdParametroScript, Valor)
(SELECT (SELECT Id FROM TestData WHERE Descricao = 'VALIDAR HOME FIXO'), 
(SELECT parscr.Id FROM ParametroScript parscr 
	LEFT JOIN Parametro par ON parscr.IdParametro = par.Id 
	LEFT JOIN Script_CondicaoScript scrcon ON parscr.IdScript_CondicaoScript = scrcon.Id
	LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
	WHERE par.Descricao = 'EVIDENCIA: NOME DO CASO DE TESTE' AND scr.Descricao='VALIDAR HOME FIXO'), 'VALIDAR HOME FIXO');	
	
INSERT INTO ParametroValor (IdTestData, IdParametroScript, Valor)
(SELECT (SELECT Id FROM TestData WHERE Descricao = 'VALIDAR HOME FIXO'), 
(SELECT parscr.Id FROM ParametroScript parscr 
	LEFT JOIN Parametro par ON parscr.IdParametro = par.Id 
	LEFT JOIN Script_CondicaoScript scrcon ON parscr.IdScript_CondicaoScript = scrcon.Id
	LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
	WHERE par.Descricao = 'EVIDENCIA: TITULO' AND scr.Descricao='VALIDAR HOME FIXO'), 'TITULO DA EVIDENCIA VALIDAR HOME FIXO');	
	
INSERT INTO ParametroValor (IdTestData, IdParametroScript, Valor)
(SELECT (SELECT Id FROM TestData WHERE Descricao = 'VALIDAR HOME FIXO'), 
(SELECT parscr.Id FROM ParametroScript parscr 
	LEFT JOIN Parametro par ON parscr.IdParametro = par.Id 
	LEFT JOIN Script_CondicaoScript scrcon ON parscr.IdScript_CondicaoScript = scrcon.Id
	LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
	WHERE par.Descricao = 'EVIDENCIA: PRJ' AND scr.Descricao='VALIDAR HOME FIXO'), 'PRJ0000001_ENT000001');	
	
INSERT INTO ParametroValor (IdTestData, IdParametroScript, Valor)
(SELECT (SELECT Id FROM TestData WHERE Descricao = 'VALIDAR HOME FIXO'), 
(SELECT parscr.Id FROM ParametroScript parscr 
	LEFT JOIN Parametro par ON parscr.IdParametro = par.Id 
	LEFT JOIN Script_CondicaoScript scrcon ON parscr.IdScript_CondicaoScript = scrcon.Id
	LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
	WHERE par.Descricao = 'EVIDENCIA: NUMERO DO CASO DE TESTE' AND scr.Descricao='VALIDAR HOME FIXO'), '01.01');	

INSERT INTO ParametroValor (IdTestData, IdParametroScript, Valor)
(SELECT (SELECT Id FROM TestData WHERE Descricao = 'AJA - CADASTRA - ALTERAR CLIENTE'), 
(SELECT parscr.Id FROM ParametroScript parscr 
	LEFT JOIN Parametro par ON parscr.IdParametro = par.Id 
	LEFT JOIN Script_CondicaoScript scrcon ON parscr.IdScript_CondicaoScript = scrcon.Id
	LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
	WHERE par.Descricao = 'CPF' AND scr.Descricao='AJA - CADASTRA - ALTERAR CLIENTE'), '66131767882');	
	
INSERT INTO ParametroValor (IdTestData, IdParametroScript, Valor)
(SELECT (SELECT Id FROM TestData WHERE Descricao = 'AJA - CADASTRA - ALTERAR CLIENTE'), 
(SELECT parscr.Id FROM ParametroScript parscr 
	LEFT JOIN Parametro par ON parscr.IdParametro = par.Id 
	LEFT JOIN Script_CondicaoScript scrcon ON parscr.IdScript_CondicaoScript = scrcon.Id
	LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
	WHERE par.Descricao = 'USUARIO SISTEMA' AND scr.Descricao='AJA - CADASTRA - ALTERAR CLIENTE'), 'TR487923');

INSERT INTO ParametroValor (IdTestData, IdParametroScript, Valor)
(SELECT (SELECT Id FROM TestData WHERE Descricao = 'AJA - CADASTRA - ALTERAR CLIENTE'), 
(SELECT parscr.Id FROM ParametroScript parscr 
	LEFT JOIN Parametro par ON parscr.IdParametro = par.Id 
	LEFT JOIN Script_CondicaoScript scrcon ON parscr.IdScript_CondicaoScript = scrcon.Id
	LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
	WHERE par.Descricao = 'SENHA SISTEMA' AND scr.Descricao='AJA - CADASTRA - ALTERAR CLIENTE'), 'bhu88uhb');	

INSERT INTO ParametroValor (IdTestData, IdParametroScript, Valor)
(SELECT (SELECT Id FROM TestData WHERE Descricao = 'AJA - CADASTRA - ALTERAR CLIENTE'), 
(SELECT parscr.Id FROM ParametroScript parscr 
	LEFT JOIN Parametro par ON parscr.IdParametro = par.Id 
	LEFT JOIN Script_CondicaoScript scrcon ON parscr.IdScript_CondicaoScript = scrcon.Id
	LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
	WHERE par.Descricao = 'APLICACAO' AND scr.Descricao='AJA - CADASTRA - ALTERAR CLIENTE'), '17');		
	
INSERT INTO ParametroValor (IdTestData, IdParametroScript, Valor)
(SELECT (SELECT Id FROM TestData WHERE Descricao = 'AJA - CADASTRA - ALTERAR CLIENTE'), 
(SELECT parscr.Id FROM ParametroScript parscr 
	LEFT JOIN Parametro par ON parscr.IdParametro = par.Id 
	LEFT JOIN Script_CondicaoScript scrcon ON parscr.IdScript_CondicaoScript = scrcon.Id
	LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
	WHERE par.Descricao = 'TRILHA' AND scr.Descricao='AJA - CADASTRA - ALTERAR CLIENTE'), '02');	

INSERT INTO ParametroValor (IdTestData, IdParametroScript, Valor)
(SELECT (SELECT Id FROM TestData WHERE Descricao = 'AJA - CADASTRA - ALTERAR CLIENTE'), 
(SELECT parscr.Id FROM ParametroScript parscr 
	LEFT JOIN Parametro par ON parscr.IdParametro = par.Id 
	LEFT JOIN Script_CondicaoScript scrcon ON parscr.IdScript_CondicaoScript = scrcon.Id
	LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
	WHERE par.Descricao = 'TIPO PESSOA' AND scr.Descricao='AJA - CADASTRA - ALTERAR CLIENTE'), 'F');	
	
INSERT INTO ParametroValor (IdTestData, IdParametroScript, Valor)
(SELECT (SELECT Id FROM TestData WHERE Descricao = 'AJA - CADASTRA - ALTERAR CLIENTE'), 
(SELECT parscr.Id FROM ParametroScript parscr 
	LEFT JOIN Parametro par ON parscr.IdParametro = par.Id 
	LEFT JOIN Script_CondicaoScript scrcon ON parscr.IdScript_CondicaoScript = scrcon.Id
	LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
	WHERE par.Descricao = 'EVIDENCIA: RESULTADO ESPERADO' AND scr.Descricao='AJA - CADASTRA - ALTERAR CLIENTE'), 'Tela validada com sucesso');	
	
INSERT INTO ParametroValor (IdTestData, IdParametroScript, Valor)
(SELECT (SELECT Id FROM TestData WHERE Descricao = 'AJA - CADASTRA - ALTERAR CLIENTE'), 
(SELECT parscr.Id FROM ParametroScript parscr 
	LEFT JOIN Parametro par ON parscr.IdParametro = par.Id 
	LEFT JOIN Script_CondicaoScript scrcon ON parscr.IdScript_CondicaoScript = scrcon.Id
	LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
	WHERE par.Descricao = 'EVIDENCIA: AMBIENTE' AND scr.Descricao='AJA - CADASTRA - ALTERAR CLIENTE'), 'TI8');	
	
INSERT INTO ParametroValor (IdTestData, IdParametroScript, Valor)
(SELECT (SELECT Id FROM TestData WHERE Descricao = 'AJA - CADASTRA - ALTERAR CLIENTE'), 
(SELECT parscr.Id FROM ParametroScript parscr 
	LEFT JOIN Parametro par ON parscr.IdParametro = par.Id 
	LEFT JOIN Script_CondicaoScript scrcon ON parscr.IdScript_CondicaoScript = scrcon.Id
	LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
	WHERE par.Descricao = 'EVIDENCIA: AUTOR' AND scr.Descricao='AJA - CADASTRA - ALTERAR CLIENTE'), 'LEANDRO');	
	
INSERT INTO ParametroValor (IdTestData, IdParametroScript, Valor)
(SELECT (SELECT Id FROM TestData WHERE Descricao = 'AJA - CADASTRA - ALTERAR CLIENTE'), 
(SELECT parscr.Id FROM ParametroScript parscr 
	LEFT JOIN Parametro par ON parscr.IdParametro = par.Id 
	LEFT JOIN Script_CondicaoScript scrcon ON parscr.IdScript_CondicaoScript = scrcon.Id
	LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
	WHERE par.Descricao = 'EVIDENCIA: DADOS DE ENTRADA' AND scr.Descricao='AJA - CADASTRA - ALTERAR CLIENTE'), 'DADOS DE ENTRADA TESTE DO SCRIPT DO PORTAL');	
	
INSERT INTO ParametroValor (IdTestData, IdParametroScript, Valor)
(SELECT (SELECT Id FROM TestData WHERE Descricao = 'AJA - CADASTRA - ALTERAR CLIENTE'), 
(SELECT parscr.Id FROM ParametroScript parscr 
	LEFT JOIN Parametro par ON parscr.IdParametro = par.Id 
	LEFT JOIN Script_CondicaoScript scrcon ON parscr.IdScript_CondicaoScript = scrcon.Id
	LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
	WHERE par.Descricao = 'EVIDENCIA: DADOS DE SAIDA' AND scr.Descricao='AJA - CADASTRA - ALTERAR CLIENTE'), 'DADOS DE SAIDA TESTE DO SCRIPT DO PORTAL');	
	
INSERT INTO ParametroValor (IdTestData, IdParametroScript, Valor)
(SELECT (SELECT Id FROM TestData WHERE Descricao = 'AJA - CADASTRA - ALTERAR CLIENTE'), 
(SELECT parscr.Id FROM ParametroScript parscr 
	LEFT JOIN Parametro par ON parscr.IdParametro = par.Id 
	LEFT JOIN Script_CondicaoScript scrcon ON parscr.IdScript_CondicaoScript = scrcon.Id
	LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
	WHERE par.Descricao = 'EVIDENCIA: FASE' AND scr.Descricao='AJA - CADASTRA - ALTERAR CLIENTE'), 'TI');	
	
INSERT INTO ParametroValor (IdTestData, IdParametroScript, Valor)
(SELECT (SELECT Id FROM TestData WHERE Descricao = 'AJA - CADASTRA - ALTERAR CLIENTE'), 
(SELECT parscr.Id FROM ParametroScript parscr 
	LEFT JOIN Parametro par ON parscr.IdParametro = par.Id 
	LEFT JOIN Script_CondicaoScript scrcon ON parscr.IdScript_CondicaoScript = scrcon.Id
	LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
	WHERE par.Descricao = 'EVIDENCIA: NOME DO CASO DE TESTE' AND scr.Descricao='AJA - CADASTRA - ALTERAR CLIENTE'), 'AJA - CADASTRA - ALTERAR CLIENTE');	
	
INSERT INTO ParametroValor (IdTestData, IdParametroScript, Valor)
(SELECT (SELECT Id FROM TestData WHERE Descricao = 'AJA - CADASTRA - ALTERAR CLIENTE'), 
(SELECT parscr.Id FROM ParametroScript parscr 
	LEFT JOIN Parametro par ON parscr.IdParametro = par.Id 
	LEFT JOIN Script_CondicaoScript scrcon ON parscr.IdScript_CondicaoScript = scrcon.Id
	LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
	WHERE par.Descricao = 'EVIDENCIA: TITULO' AND scr.Descricao='AJA - CADASTRA - ALTERAR CLIENTE'), 'TITULO DA EVIDENCIA AJA - CADASTRA - ALTERAR CLIENTE');	
	
INSERT INTO ParametroValor (IdTestData, IdParametroScript, Valor)
(SELECT (SELECT Id FROM TestData WHERE Descricao = 'AJA - CADASTRA - ALTERAR CLIENTE'), 
(SELECT parscr.Id FROM ParametroScript parscr 
	LEFT JOIN Parametro par ON parscr.IdParametro = par.Id 
	LEFT JOIN Script_CondicaoScript scrcon ON parscr.IdScript_CondicaoScript = scrcon.Id
	LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
	WHERE par.Descricao = 'EVIDENCIA: PRJ' AND scr.Descricao='AJA - CADASTRA - ALTERAR CLIENTE'), 'PRJ0000001_ENT000001');	
	
INSERT INTO ParametroValor (IdTestData, IdParametroScript, Valor)
(SELECT (SELECT Id FROM TestData WHERE Descricao = 'AJA - CADASTRA - ALTERAR CLIENTE'), 
(SELECT parscr.Id FROM ParametroScript parscr 
	LEFT JOIN Parametro par ON parscr.IdParametro = par.Id 
	LEFT JOIN Script_CondicaoScript scrcon ON parscr.IdScript_CondicaoScript = scrcon.Id
	LEFT JOIN Script scr ON scrcon.IdScript = scr.Id
	WHERE par.Descricao = 'EVIDENCIA: NUMERO DO CASO DE TESTE' AND scr.Descricao='AJA - CADASTRA - ALTERAR CLIENTE'), '01.01');	
	
	
END
	/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

IF NOT EXISTS (SELECT * FROM StatusExecucao)
BEGIN
	INSERT INTO StatusExecucao (Id, Descricao) VALUES (1, 'Aguardando Processamento');
	INSERT INTO StatusExecucao (Id, Descricao) VALUES (2, 'Em Processamento');
	INSERT INTO StatusExecucao (Id, Descricao) VALUES (3, 'Processando Log Tosca');
	INSERT INTO StatusExecucao (Id, Descricao) VALUES (4, 'Sucesso');
	INSERT INTO StatusExecucao (Id, Descricao) VALUES (5, 'Falha');
END
	/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

-- Cadastro de TDM_USUARIO
IF NOT EXISTS (SELECT * FROM TDM_Usuario)
BEGIN
	INSERT INTO TDM_Usuario(IdUsuario, IdTDM) VALUES (1,1);
	INSERT INTO TDM_Usuario(IdUsuario, IdTDM) VALUES (2,1);
	INSERT INTO TDM_Usuario(IdUsuario, IdTDM) VALUES (2,2);
	INSERT INTO TDM_Usuario(IdUsuario, IdTDM) VALUES (2,4);
	INSERT INTO TDM_Usuario(IdUsuario, IdTDM) VALUES (3,1);
	INSERT INTO TDM_Usuario(IdUsuario, IdTDM) VALUES (6,1);
END




IF NOT EXISTS (SELECT * FROM TelaMapaCalor)
BEGIN
	INSERT INTO TelaMapaCalor (Descricao, Caminho) 
	SELECT 'DataPool', 'C:\TDM_Portal\Assets\Images\TelaDatapool\TelaDatapool.png' 

	INSERT INTO TelaMapaCalor (Descricao, Caminho) 
	SELECT 'TestData', 'C:\TDM_Portal\Assets\Images\TelaTestData\TelaTestData.png'
END






















GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
